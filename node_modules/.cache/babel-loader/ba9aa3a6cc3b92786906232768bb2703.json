{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nexport class GizmoSection extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gizmoCount: 0\n    };\n\n    this.createGizmo = () => {\n      this.setState({\n        gizmoCount: this.state.gizmoCount + 1\n      });\n    };\n  }\n\n  paintBlock() {\n    const possibleBlockColors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'];\n    const blockColor = Math.floor(Math.random() * possibleBlockColors.length);\n    return possibleBlockColors[blockColor];\n  }\n\n  render() {\n    const gizmoChildren = [];\n\n    for (let i = 0; i < this.state.gizmoCount; i++) {\n      gizmoChildren.push(React.createElement(Gizmo, {\n        key: i,\n        number: i,\n        backGroundColor: this.paintBlock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(ParentGizmoContainer, {\n      addGizmo: this.createGizmo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, gizmoChildren));\n  }\n\n}\n\nconst ParentGizmoContainer = props => React.createElement(\"div\", {\n  className: \"testing\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  onClick: props.addGizmo,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"Make me a Gizmo\"), React.createElement(\"div\", {\n  className: \"GizmosGoHere\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, props.children));","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js"],"names":["React","Gizmo","GizmoSection","Component","state","gizmoCount","createGizmo","setState","paintBlock","possibleBlockColors","blockColor","Math","floor","random","length","render","gizmoChildren","i","push","ParentGizmoContainer","props","addGizmo","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,SAApB;AAEA,OAAO,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAEhDC,KAFgD,GAExC;AACPC,MAAAA,UAAU,EAAG;AADN,KAFwC;;AAAA,SAOjDC,WAPiD,GAOnC,MAAM;AACnB,WAAKC,QAAL,CAAc;AACbF,QAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,GAAwB;AADvB,OAAd;AAGA,KAXgD;AAAA;;AAahDG,EAAAA,UAAU,GAAG;AACZ,UAAMC,mBAAmB,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4B,OAA5B,EAAqC,MAArC,EAA6C,QAA7C,EAAuD,QAAvD,CAA5B;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,mBAAmB,CAACK,MAA/C,CAAnB;AACC,WAAOL,mBAAmB,CAACC,UAAD,CAA1B;AACD;;AAEFK,EAAAA,MAAM,GAAG;AACR,UAAMC,aAAa,GAAG,EAAtB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKb,KAAL,CAAWC,UAA9B,EAA0CY,CAAC,EAA3C,EAA+C;AAC9CD,MAAAA,aAAa,CAACE,IAAd,CAAmB,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAED,CAAZ;AAAe,QAAA,MAAM,EAAEA,CAAvB;AAA0B,QAAA,eAAe,EAAE,KAAKT,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AACA;;AAED,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,oBAAC,oBAAD;AAAsB,MAAA,QAAQ,EAAE,KAAKF,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEU,aADF,CADO,CAAR;AAKA;;AA9BgD;;AAiClD,MAAMG,oBAAoB,GAAGC,KAAK,IACjC;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEC;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACED,KAAK,CAACE,QADR,CAFD,CADD","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\n\nexport class GizmoSection extends React.Component {\n\n\t\tstate = {\n\t\t\tgizmoCount : 0\n\t\t}\n\n\t\n\tcreateGizmo = () => {\n\t\tthis.setState({\n\t\t\tgizmoCount: this.state.gizmoCount + 1 \n\t\t});\n\t}\n\n  paintBlock() {\n  \tconst possibleBlockColors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'];\n  \tconst blockColor = Math.floor(Math.random() * possibleBlockColors.length);\n   \treturn possibleBlockColors[blockColor];\n  }\n\n\trender() {\n\t\tconst gizmoChildren = [];\n\t\tfor(let i = 0; i < this.state.gizmoCount; i++) {\n\t\t\tgizmoChildren.push(<Gizmo key={i} number={i} backGroundColor={this.paintBlock} />)\n\t\t}\n\n\t\treturn (<div>\n\t\t\t<ParentGizmoContainer addGizmo={this.createGizmo}>\n\t\t\t\t{gizmoChildren}\n\t\t\t</ParentGizmoContainer>\n\t\t\t</div>)\n\t}\n}\n\nconst ParentGizmoContainer = props => (\n\t<div className=\"testing\">\n\t<button onClick={props.addGizmo}>Make me a Gizmo</button>\n\t\t<div className=\"GizmosGoHere\">\n\t\t\t{props.children}\n\t\t\t</div>\n\t</div>\n);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}