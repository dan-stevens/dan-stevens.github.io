{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/parentGizmo.js\";\nimport React from 'react';\nimport { ChildGizmo } from './childGizmo';\nexport class ParentGizmo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: '#fff',\n      width: '200px',\n      height: '100px',\n      borderRadius: '0px'\n    };\n    this.toggleColor = this.toggleColor.bind(this);\n    this.toggleHeight = this.toggleHeight.bind(this);\n    this.toggleWidth = this.toggleWidth.bind(this);\n    this.toggleCorners = this.toggleCorners.bind(this);\n  }\n\n  toggleColor() {\n    this.setState({\n      backgroundColor: this.state.backgroundColor === '#fff' ? '#000' : '#fff'\n    });\n  }\n\n  toggleHeight() {\n    this.setState({\n      height: this.state.height === '100px' ? '200px' : '100px'\n    });\n  }\n\n  toggleWidth() {\n    this.setState({\n      width: this.state.width === '200px' ? '300px' : '200px'\n    });\n  }\n\n  toggleCorners() {\n    this.setState({\n      borderRadius: this.state.borderRadius === '0px' ? '50px' : '0px'\n    });\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount: immediately before Stripe is rendered');\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount: immediately after Stripe is rendered');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('componentWillRecieveProps: component will recive some new prop(s)');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('ShouldComponentUpdate: Before re-rendering (can be cancelled by returning false)');\n    return true;\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log(nextState.name + ' componentWillUpdate: Before re-rendering');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevState.name + ' componentDidUpdate: after components updated in the DOM');\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount: Component will unmount - bye');\n  }\n\n  logLifeCycleDetail(value) {\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: this.state.backgroundColor,\n        width: this.state.width,\n        height: this.state.height,\n        borderRadius: this.state.borderRadius\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gizmo-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(ChildGizmo, {\n      onChangeColor: this.toggleColor,\n      onChangeHeight: this.toggleHeight,\n      onChangeWidth: this.toggleWidth,\n      onChangeCorners: this.toggleCorners,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/parentGizmo.js"],"names":["React","ChildGizmo","ParentGizmo","Component","constructor","props","state","backgroundColor","width","height","borderRadius","toggleColor","bind","toggleHeight","toggleWidth","toggleCorners","setState","componentWillMount","console","log","componentDidMount","componentWillReceiveProps","nextProps","shouldComponentUpdate","nextState","componentWillUpdate","name","componentDidUpdate","prevProps","prevState","componentWillUnmount","logLifeCycleDetail","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {ChildGizmo} from './childGizmo';\n\nexport class ParentGizmo extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tbackgroundColor: '#fff',\n\t\t\twidth: '200px',\n\t\t\theight: '100px',\n\t\t\tborderRadius: '0px'\n\t\t};\n\t\tthis.toggleColor = this.toggleColor.bind(this);\n\t\tthis.toggleHeight = this.toggleHeight.bind(this);\n\t\tthis.toggleWidth = this.toggleWidth.bind(this);\n\t\tthis.toggleCorners = this.toggleCorners.bind(this);\n\t}\n\n\ttoggleColor() {\t\n\t\tthis.setState({\n\t\t\tbackgroundColor: this.state.backgroundColor === '#fff' ? '#000' : '#fff'\t\t\t\n\t\t});\n\t}\n\n\ttoggleHeight() {\n\t\tthis.setState({\n\t\t\theight: this.state.height === '100px' ? '200px' : '100px'\n\t\t});\n\t}\n\n\ttoggleWidth() {\n\t\tthis.setState({\n\t\t\twidth: this.state.width === '200px' ? '300px' : '200px'\n\t\t});\n\t}\n\n\ttoggleCorners() {\n\t\tthis.setState({\n\t\t\tborderRadius: this.state.borderRadius === '0px' ? '50px' : '0px'\n\t\t});\n\t}\n\n\tcomponentWillMount() {\n\t\tconsole.log('componentWillMount: immediately before Stripe is rendered');\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log('componentDidMount: immediately after Stripe is rendered');\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconsole.log('componentWillRecieveProps: component will recive some new prop(s)');\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\tconsole.log('ShouldComponentUpdate: Before re-rendering (can be cancelled by returning false)');\n\t\treturn true;\n\t}\n\n\tcomponentWillUpdate(nextProps, nextState) {\n\t\tconsole.log(nextState.name + ' componentWillUpdate: Before re-rendering');\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconsole.log(prevState.name + ' componentDidUpdate: after components updated in the DOM');\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconsole.log('componentWillUnmount: Component will unmount - bye');\n\t}\n\n\tlogLifeCycleDetail(value) {\n\t\treturn <li>{value}</li>;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={{\n\t\t\t\t\tbackgroundColor: this.state.backgroundColor,\n\t\t\t\t\twidth: this.state.width,\n\t\t\t\t\theight: this.state.height,\n\t\t\t\t\tborderRadius: this.state.borderRadius\n\t\t\t\t\t}}>\n\t\t\t\t</div>\n\t\t\t\t<div className='gizmo-details'>\n\t\t\t\t\t<ul>\n\t\t\t\t      {<Item />}\n\t\t\t\t    </ul>\n\t\t\t\t</div>\n\t\t\t\t<ChildGizmo \n\t\t\t\t\tonChangeColor={this.toggleColor}\n\t\t\t\t\tonChangeHeight={this.toggleHeight}\n\t\t\t\t\tonChangeWidth={this.toggleWidth}\n\t\t\t\t\tonChangeCorners={this.toggleCorners}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}