{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nimport { Crane } from './crane';\nimport './gizmo.css';\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gizmoCount: 0,\n      gizmoArray: [],\n      animationQueue: [],\n      animationQueuePriority: 1,\n      currentAnimation: []\n    };\n\n    this.createGizmo = () => {\n      this.setState({\n        gizmoCount: this.state.gizmoCount + 1,\n        gizmoArray: [...this.state.gizmoArray, React.createElement(Gizmo, {\n          key: this.state.gizmoCount,\n          number: this.state.gizmoCount,\n          onFilterOut: this.convertMonster,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        })]\n      });\n    };\n\n    this.convertMonster = this.convertMonster.bind(this);\n    this.removeMonster = this.removeMonster.bind(this);\n    this.currentAnimationFinished = this.currentAnimationFinished.bind(this);\n  }\n\n  convertMonster(monsterNumber) {\n    //this.craneIn(monsterNumber);\n    this.setState({\n      animationQueue: [{\n        animationSequence: craneToPickup,\n        priority: 1\n      }, {\n        animationSequence: craneDrop,\n        priority: 2\n      }, {\n        animationSequence: cranePickup2,\n        priority: 3\n      }, {\n        d,\n        priority: 3\n      }],\n      currentAnimation: []\n    });\n  }\n\n  craneIn(monsterNumber) {\n    console.log('craneIn');\n    const element = document.getElementById('crane'); // element.addEventListener('animationend', () => {\n    //      element.classList.add('crane-move-left');\n    //    });\n\n    element.classList.add('crane-move-right');\n  }\n\n  pickUpMonster(monsterNumber) {\n    alert('final?'); //const element = document.getElementById('crane');\n    //console.log(this.state.gizmoArray[monsterNumber]);\n    //console.log(this.gizmoRef.current);\n  }\n\n  removeMonster(monsterNumber) {\n    console.log('removeMonster'); // run some animation here, wait till its done, and then fire set state like below.\n\n    this.setState({\n      gizmoArray: this.state.gizmoArray.filter(function (item) {\n        return item.props.number !== monsterNumber;\n      })\n    });\n  } //current animation's done\n\n\n  currentAnimationFinished(animation) {\n    alert(animation);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //We have an updated animation queue\n    if (prevState.animationQueue !== this.state.animationQueue) {\n      console.log('We have an animation Queue!');\n      let currentPriority = this.state.animationQueuePriority;\n      let sendToCurrentAnimation = [];\n      this.state.animationQueue.forEach(function (animation, index) {\n        if (animation.priority === currentPriority) {\n          sendToCurrentAnimation.push(animation);\n        }\n      });\n      currentPriority++;\n      console.log('this to current animation, we should be done: ' + sendToCurrentAnimation);\n      this.setState({\n        currentAnimation: sendToCurrentAnimation,\n        animationQueuePriority: currentPriority\n      }); //}\n    } //we have current animation(s)\n\n\n    if (prevState.currentAnimation !== this.state.currentAnimation && this.state.currentAnimation.length !== 0) {\n      let self = this;\n      this.state.currentAnimation.forEach(function (animate, index, thisArg) {\n        animate.animationSequence().then(function (resolve) {\n          thisArg.pickUpMonster(resolve);\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gizmos-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Crane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"gizmo-button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(GizmoButton, {\n      onClick: this.createGizmo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"gizmo-creater\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.state.gizmoArray), React.createElement(\"section\", {\n      className: \"gizmo-converter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"need to design a converter\")), React.createElement(\"section\", {\n      className: \"gizmo-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"need to design a gizmo result\")));\n  }\n\n}\n\nconst craneToPickup = () => {\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(element, 'margin-left', '38%');\n};\n\nconst craneDrop = () => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(element, 'top', '170px');\n};\n\nconst cranePickup2 = () => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(element, 'top', '310px');\n};\n\nconst d = () => {\n  setTimeout(function () {\n    alert('D');\n  }, 2000);\n};\n\nconst e = () => {\n  setTimeout(function () {\n    alert('E');\n    return 'done';\n  }, 2000);\n};\n\nconst f = () => {\n  setTimeout(function () {\n    alert('F');\n  }, 2000);\n};\n\nconst g = () => {\n  setTimeout(function () {\n    alert('G');\n  }, 2000);\n};\n\nconst cssTransitionToPromise = (el, property, value) => {\n  return new Promise(resolve => {\n    el.style[property] = value;\n\n    const transitionEnded = e => {\n      if (e.propertyName !== property) {\n        console.log(e.propertyName);\n        return; //Wrong transition\n      } else {\n        el.removeEventListener('transitionend', transitionEnded);\n        resolve('hi there!');\n      }\n    };\n\n    el.addEventListener('transitionend', transitionEnded);\n  });\n};\n\nclass GizmoButton extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Make a Gizmo\");\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js"],"names":["React","Gizmo","Crane","GizmoSection","Component","constructor","props","state","gizmoCount","gizmoArray","animationQueue","animationQueuePriority","currentAnimation","createGizmo","setState","convertMonster","bind","removeMonster","currentAnimationFinished","monsterNumber","animationSequence","craneToPickup","priority","craneDrop","cranePickup2","d","craneIn","console","log","element","document","getElementById","classList","add","pickUpMonster","alert","filter","item","number","animation","componentDidUpdate","prevProps","prevState","currentPriority","sendToCurrentAnimation","forEach","index","push","length","self","animate","thisArg","then","resolve","render","cssTransitionToPromise","setTimeout","e","f","g","el","property","value","Promise","style","transitionEnded","propertyName","removeEventListener","addEventListener","GizmoButton","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\nimport {Crane} from './crane';\nimport './gizmo.css';\n\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.convertMonster = this.convertMonster.bind(this);\n\tthis.removeMonster = this.removeMonster.bind(this);\n\tthis.currentAnimationFinished = this.currentAnimationFinished.bind(this);\n  }\n  state = {\n    gizmoCount : 0,\n    gizmoArray : [],\n    animationQueue: [],\n    animationQueuePriority: 1,\n    currentAnimation: []\n  }\n\n\tcreateGizmo = () => {\n\t\tthis.setState({\n\t\t\tgizmoCount : this.state.gizmoCount + 1,\n\t\t\tgizmoArray: [...this.state.gizmoArray, <Gizmo key={this.state.gizmoCount} number={this.state.gizmoCount} onFilterOut={this.convertMonster} />]\t\t\t\n\t\t});\n\t}\n\n\tconvertMonster(monsterNumber) {\n\t\t//this.craneIn(monsterNumber);\n\t\tthis.setState({\n\t\t\tanimationQueue: [\n\t\t\t  {\n\t\t\t  \tanimationSequence: craneToPickup,\n\t\t\t  \tpriority: 1\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationSequence: craneDrop,\n\t\t\t  \tpriority: 2\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationSequence: cranePickup2,\n\t\t\t  \tpriority: 3\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \td,\n\t\t\t  \tpriority: 3\n\t\t\t  }\n\t\t\t],\n\t\t\tcurrentAnimation: []\n\t\t});\n\t}\n\n\tcraneIn(monsterNumber) {\n\t\tconsole.log('craneIn');\n\t\t\n\t\tconst element = document.getElementById('crane');\n\n\t\t// element.addEventListener('animationend', () => {\n\t //      element.classList.add('crane-move-left');\n\t //    });\n\t\telement.classList.add('crane-move-right');\n\t}\n\n\tpickUpMonster(monsterNumber) {\n\t\talert('final?');\n\t\t//const element = document.getElementById('crane');\n\t\t//console.log(this.state.gizmoArray[monsterNumber]);\n\t\t//console.log(this.gizmoRef.current);\n\t}\n\n\tremoveMonster(monsterNumber) {\n\t\tconsole.log('removeMonster');\n\n\t\t// run some animation here, wait till its done, and then fire set state like below.\n\n\t\tthis.setState({\n\t\t\tgizmoArray : this.state.gizmoArray.filter(function(item) {\n\t\t\t\treturn item.props.number !== monsterNumber\n\t\t\t})\n\t\t});\n\t}\n\n\t//current animation's done\n\tcurrentAnimationFinished(animation) {\n\t\talert(animation);\n\t\t\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\n\t\t//We have an updated animation queue\n\t\tif (prevState.animationQueue !== this.state.animationQueue) {\n\t\t\tconsole.log('We have an animation Queue!');\n\n\t\t\tlet currentPriority = this.state.animationQueuePriority;\n\n\t\t\tlet sendToCurrentAnimation = [];\n\n\t\t\tthis.state.animationQueue.forEach(function(animation, index) { \n\t\t\t\tif (animation.priority === currentPriority) {\n\t\t\t\t\tsendToCurrentAnimation.push(animation);\n\t\t\t\t}\t\t\t\t\n\t\t\t\t});\n\t\t\tcurrentPriority++\n\n\t\t\tconsole.log('this to current animation, we should be done: ' + sendToCurrentAnimation);\n\t\t\tthis.setState({\n\t\t\t  currentAnimation: sendToCurrentAnimation,\n\t\t\t  animationQueuePriority: currentPriority\n\t\t\t});\n\t\t\t//}\n\t\t}\t\t\n\n\t\t//we have current animation(s)\n\t\tif (prevState.currentAnimation !== this.state.currentAnimation && this.state.currentAnimation.length !== 0) {\n\t\t\t\tlet self = this;\n\t\t\t\tthis.state.currentAnimation.forEach(function(animate, index, thisArg) {\n\t\t\t\t\tanimate.animationSequence().then(function(resolve) {thisArg.pickUpMonster(resolve)});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\n\trender() {\n\t\treturn (\n\t\t  <div className='gizmos-container'>\n\t\t  \t<Crane />\n\t\t    <section className=\"gizmo-button-container\">\n\t\t      <GizmoButton onClick={this.createGizmo} />\n\t\t    </section>\n\t\t\t  <section className=\"gizmo-creater\">\n\t\t\t\t{this.state.gizmoArray}\n\t\t\t</section>\n            <section className=\"gizmo-converter\">\n             <p>need to design a converter</p>\n            </section>\n            <section className=\"gizmo-result\">\n             <p>need to design a gizmo result</p>\n            </section>\n\t      </div>\n\t\t)\n\t}\n}\n\n\nconst craneToPickup = () => {\n  const element = document.getElementById('crane');\n  return (cssTransitionToPromise(element, 'margin-left', '38%'))\n}\n\nconst craneDrop = () => {\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(element, 'top', '170px'))\n}\n\nconst cranePickup2 = () => {\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(element, 'top', '310px'))\n}\n\nconst d = () => {\n\tsetTimeout(function() {\n\t\talert('D');\n\t}, 2000);\n}\n\nconst e = () => {\n\tsetTimeout(function() {\n\t\talert('E');\n\t\treturn('done')\n\t}, 2000);\n}\n\nconst f = () => {\n  setTimeout(function() {\n\t\talert('F');\n\t}, 2000);\n}\n\nconst g = () => {\n  setTimeout(function() {\n\t\talert('G');\n\t}, 2000);\n}\n\nconst cssTransitionToPromise = (el, property, value) => {\nreturn (\n\t  new Promise(resolve => {\n      el.style[property] = value;\n      const transitionEnded = e => {\n      if (e.propertyName !== property) {\n        console.log(e.propertyName);\n    \treturn; //Wrong transition\n      }\n      else { \n    \tel.removeEventListener('transitionend', transitionEnded);\n  \t    resolve('hi there!');\n      }\n    }\n    el.addEventListener('transitionend', transitionEnded);\n    })\n  )\n}\n\nclass GizmoButton extends React.Component {\n  render() {\n    \n    return (\n      <button onClick={this.props.onClick}>Make a Gizmo</button>\n    ) \n\n  }\n}"]},"metadata":{},"sourceType":"module"}