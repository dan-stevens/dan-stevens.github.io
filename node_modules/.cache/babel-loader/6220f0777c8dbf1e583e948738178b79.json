{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/frame.js\";\nimport React from 'react';\nimport { SVGFrame } from './svgFrame';\nimport updateMonitor from './monitor';\nimport './frame.css';\nexport class Frame extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    updateMonitor('Frame componentWillUpdate called');\n  }\n\n  componentWillUpdate(prevProps, prevState) {}\n\n  componentWillUnmount() {\n    this.props.cycleFrameType(this.props.currentFrameType.id); // if (this.state.currentFrameType === this.state.frameTypes.length) {\n    // \tconsole.log('here');\n    // \t\tthis.setState({\n    // \t\t\tcurrentFrameType: 0\n    // \t\t})\n    // \t} else {\n    // \t\tconsole.log('ok here');\n    // \t\tthis.setState({\n    // \t\t\tcurrentFrameType: this.state.currentFrameType + 1\n    // \t\t})\n    // \t}\n  }\n\n  render() {\n    return React.createElement(SVGFrame, {\n      id: \"frame\",\n      frameType: this.props.currentFrameType.frameTypeName,\n      frameOption: this.props.currentFrameOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/frame.js"],"names":["React","SVGFrame","updateMonitor","Frame","Component","constructor","props","componentDidMount","componentWillUpdate","prevProps","prevState","componentWillUnmount","cycleFrameType","currentFrameType","id","render","frameTypeName","currentFrameOption"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAO,aAAP;AAEA,OAAO,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnBL,IAAAA,aAAa,CAAC,kCAAD,CAAb;AACA;;AAEDM,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAEzC;;AAEDC,EAAAA,oBAAoB,GAAG;AACtB,SAAKL,KAAL,CAAWM,cAAX,CAA0B,KAAKN,KAAL,CAAWO,gBAAX,CAA4BC,EAAtD,EADsB,CAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACE,oBAAC,QAAD;AACQ,MAAA,EAAE,EAAC,OADX;AAEQ,MAAA,SAAS,EAAE,KAAKT,KAAL,CAAWO,gBAAX,CAA4BG,aAF/C;AAGQ,MAAA,WAAW,EAAE,KAAKV,KAAL,CAAWW,kBAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOA;;AApCyC","sourcesContent":["import React from 'react';\nimport {SVGFrame} from './svgFrame';\nimport updateMonitor from './monitor';\nimport './frame.css';\n\nexport class Frame extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\t\tupdateMonitor('Frame componentWillUpdate called');\n\t}\n\n\tcomponentWillUpdate(prevProps, prevState) {\n\t\t\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.cycleFrameType(this.props.currentFrameType.id);\n\t\t// if (this.state.currentFrameType === this.state.frameTypes.length) {\n\t\t// \tconsole.log('here');\n\t\t// \t\tthis.setState({\n\t\t// \t\t\tcurrentFrameType: 0\n\t\t// \t\t})\n\t\t// \t} else {\n\t\t// \t\tconsole.log('ok here');\n\t\t// \t\tthis.setState({\n\t\t// \t\t\tcurrentFrameType: this.state.currentFrameType + 1\n\t\t// \t\t})\n\t\t// \t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t  <SVGFrame\n            id='frame'\n            frameType={this.props.currentFrameType.frameTypeName}\n            frameOption={this.props.currentFrameOption}           \n\t\t  />\n\t\t)\n\t}\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}