{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/vehicle.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nimport { Frame } from './frame';\nimport updateMonitor from './monitor';\nexport class Vehicle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.cycleFrameType = currentFrameType => {\n      if (currentFrameType < this.state.frameTypes.length - 1) {\n        this.setState({\n          currentFrameTypeId: this.state.currentFrameTypeId + 1\n        });\n      } else {\n        this.setState({\n          currentFrameTypeId: 0\n        });\n      }\n    };\n\n    this.state = {\n      displayFrame: false,\n      currentFrameTypeId: 0,\n      frameTypes: [{\n        id: 0,\n        frameTypeName: 'ice-cream-truck'\n      }, {\n        id: 1,\n        frameTypeName: 'fire-truck'\n      }]\n    };\n  }\n\n  componentWillUpdate(prevProps, prevState) {\n    //Bring in frame\n    if (this.props.displayFrame && this.state.displayFrame === false && prevState.displayFrame === false) {\n      updateMonitor('Vehicle componentWillUpdate called');\n      this.setState({\n        displayFrame: true\n      });\n    } //Remove frame\n\n\n    if (!this.props.displayFrame && this.state.displayFrame === true && prevState.displayFrame === true) {\n      this.setState({\n        displayFrame: false\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.newVehicle();\n    this.setState({\n      displayFrame: false\n    });\n  }\n\n  render() {\n    let frame;\n\n    if (this.state.displayFrame) {\n      frame = React.createElement(Frame, {\n        currentFrameType: this.state.frameTypes[this.state.currentFrameTypeId],\n        cycleFrameType: this.cycleFrameType,\n        currentFrameOption: this.props.currentFrameOption.frameOptionName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"vehicle\",\n      id: 'vehicleId' + this.props.currentVehicleId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Gizmo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), frame);\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/vehicle.js"],"names":["React","Gizmo","Frame","updateMonitor","Vehicle","Component","constructor","props","cycleFrameType","currentFrameType","state","frameTypes","length","setState","currentFrameTypeId","displayFrame","id","frameTypeName","componentWillUpdate","prevProps","prevState","componentWillUnmount","newVehicle","render","frame","currentFrameOption","frameOptionName","currentVehicleId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,OAAOC,aAAP,MAA0B,WAA1B;AAEA,OAAO,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6CnBC,cA7CmB,GA6CDC,gBAAD,IAAsB;AACtC,UAAIA,gBAAgB,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,GAA+B,CAAtD,EAAyD;AACxD,aAAKC,QAAL,CAAc;AACbC,UAAAA,kBAAkB,EAAE,KAAKJ,KAAL,CAAWI,kBAAX,GAAgC;AADvC,SAAd;AAGA,OAJD,MAKK;AACJ,aAAKD,QAAL,CAAc;AACbC,UAAAA,kBAAkB,EAAE;AADP,SAAd;AAGA;AACD,KAxDkB;;AAGjB,SAAKJ,KAAL,GAAa;AACXK,MAAAA,YAAY,EAAE,KADH;AAEXD,MAAAA,kBAAkB,EAAE,CAFT;AAGRH,MAAAA,UAAU,EAAE,CACf;AACEK,QAAAA,EAAE,EAAE,CADN;AAEDC,QAAAA,aAAa,EAAE;AAFd,OADe,EAKf;AACED,QAAAA,EAAE,EAAE,CADN;AAEDC,QAAAA,aAAa,EAAE;AAFd,OALe;AAHJ,KAAb;AAcD;;AAEDC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACzC;AACA,QAAI,KAAKb,KAAL,CAAWQ,YAAX,IAA2B,KAAKL,KAAL,CAAWK,YAAX,KAA4B,KAAvD,IAAgEK,SAAS,CAACL,YAAV,KAA2B,KAA/F,EAAsG;AACpGZ,MAAAA,aAAa,CAAC,oCAAD,CAAb;AACG,WAAKU,QAAL,CAAc;AAClBE,QAAAA,YAAY,EAAE;AADI,OAAd;AAGJ,KAPwC,CASzC;;;AACA,QAAI,CAAC,KAAKR,KAAL,CAAWQ,YAAZ,IAA4B,KAAKL,KAAL,CAAWK,YAAX,KAA4B,IAAxD,IAAgEK,SAAS,CAACL,YAAV,KAA2B,IAA/F,EAAqG;AAChG,WAAKF,QAAL,CAAc;AAClBE,QAAAA,YAAY,EAAE;AADI,OAAd;AAGJ;AAGD;;AAEDM,EAAAA,oBAAoB,GAAG;AACtB,SAAKd,KAAL,CAAWe,UAAX;AACA,SAAKT,QAAL,CAAc;AACbE,MAAAA,YAAY,EAAE;AADD,KAAd;AAGE;;AAeHQ,EAAAA,MAAM,GAAG;AAER,QAAIC,KAAJ;;AAGA,QAAI,KAAKd,KAAL,CAAWK,YAAf,EAA6B;AAC5BS,MAAAA,KAAK,GAAG,oBAAC,KAAD;AACP,QAAA,gBAAgB,EAAE,KAAKd,KAAL,CAAWC,UAAX,CAAsB,KAAKD,KAAL,CAAWI,kBAAjC,CADX;AAEP,QAAA,cAAc,EAAE,KAAKN,cAFd;AAGP,QAAA,kBAAkB,EAAE,KAAKD,KAAL,CAAWkB,kBAAX,CAA8BC,eAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAKA;;AAED,WACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,EAAE,EAAE,cAAc,KAAKnB,KAAL,CAAWoB,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEEH,KAFF,CADD;AAMA;;AA9E2C","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\nimport {Frame} from './frame';\nimport updateMonitor from './monitor';\n\nexport class Vehicle extends React.Component {\n\tconstructor(props) {\n\t  super(props);\n\n\t  this.state = {\n\t    displayFrame: false,\n\t    currentFrameTypeId: 0,\n        frameTypes: [\n\t    {\n\t      id: 0,\n\t\t  frameTypeName: 'ice-cream-truck'\n\t    },\n\t    {\n\t      id: 1,\n\t\t  frameTypeName: 'fire-truck'\n\t    }\n\t\t] \n\t  }\t  \n\t}\n\n\tcomponentWillUpdate(prevProps, prevState) {\t\n\t\t//Bring in frame\n\t\tif (this.props.displayFrame && this.state.displayFrame === false && prevState.displayFrame === false) {\t\n\t\t  updateMonitor('Vehicle componentWillUpdate called');\t\t\t\t\t\n\t      this.setState({\n\t\t\tdisplayFrame: true\n\t\t  });\t\t\t\n\t\t}\n\t\t\n\t\t//Remove frame\n\t\tif (!this.props.displayFrame && this.state.displayFrame === true && prevState.displayFrame === true) {\t\t\t\t\t\t\t\t\n\t      this.setState({\n\t\t\tdisplayFrame: false\n\t\t  })\n\t\t}\n\n\t\t\n\t}\n\n\tcomponentWillUnmount() {\t\t\t\n\t\tthis.props.newVehicle();\n\t\tthis.setState({\n\t\t\tdisplayFrame: false\n\t\t});\n  \t}\n\n\tcycleFrameType = (currentFrameType) => {\n\t\tif (currentFrameType < this.state.frameTypes.length - 1) {\n\t\t\tthis.setState({\n\t\t\t\tcurrentFrameTypeId: this.state.currentFrameTypeId + 1\t\t\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tcurrentFrameTypeId: 0\n\t\t\t})\n\t\t}\t\n\t}\t\n\t\n\trender() {\n\n\t\tlet frame;\n\n\n\t\tif (this.state.displayFrame) {\n\t\t\tframe = <Frame \n\t\t\t\tcurrentFrameType={this.state.frameTypes[this.state.currentFrameTypeId]} \n\t\t\t\tcycleFrameType={this.cycleFrameType} \n\t\t\t\tcurrentFrameOption={this.props.currentFrameOption.frameOptionName}\n\t\t\t/>\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='vehicle' id={'vehicleId' + this.props.currentVehicleId}>\n\t\t\t\t<Gizmo />\t\t\t\t\n\t\t\t\t{frame}\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}