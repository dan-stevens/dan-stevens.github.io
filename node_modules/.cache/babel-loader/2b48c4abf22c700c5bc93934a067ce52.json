{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/floatingMonster.js\";\nimport React from 'react';\nexport class FloatingMonster extends React.Component {\n  boo() {\n    let viewport = ['top', 'right', 'bottom', 'left'];\n    let side = viewport[Math.floor(Math.random() * viewport.length)];\n    console.log(side); //Pick a location on that side\n\n    let sideLocation = Math.random() * 100 + '%';\n    console.log(sideLocation); //Pick a Monster\n\n    let selectedMonster = this.state.floatingMonsterArray[Math.floor(Math.random() * this.state.floatingMonsterArray.length)];\n    console.log(JSON.stringify(selectedMonster)); //Animate it\n\n    this.boo(side, sideLocation, selectedMonster.props.id);\n  }\n\n  onComponentDidMount() {\n    (function loop() {\n      var rand = Math.round(Math.random() * (3000 - 500)) + 500;\n      setTimeout(function () {\n        boo();\n        loop();\n      }, rand);\n    })();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: this.props.id,\n      className: \"floating-monster \".concat(this.props.species),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"torso\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"left-arm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"right-arm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/floatingMonster.js"],"names":["React","FloatingMonster","Component","boo","viewport","side","Math","floor","random","length","console","log","sideLocation","selectedMonster","state","floatingMonsterArray","JSON","stringify","props","id","onComponentDidMount","loop","rand","round","setTimeout","render","species"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAErDC,EAAAA,GAAG,GAAG;AAAC,QAAIC,QAAQ,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAf;AACL,QAAIC,IAAI,GAAGD,QAAQ,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAACK,MAApC,CAAD,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAFI,CAIJ;;AACA,QAAIO,YAAY,GAAGN,IAAI,CAACE,MAAL,KAAgB,GAAhB,GAAsB,GAAzC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ,EANI,CAQJ;;AACA,QAAIC,eAAe,GAAG,KAAKC,KAAL,CAAWC,oBAAX,CAAgCT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKM,KAAL,CAAWC,oBAAX,CAAgCN,MAA3D,CAAhC,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,SAAL,CAAeJ,eAAf,CAAZ,EAVI,CAYJ;;AACA,SAAKV,GAAL,CAASE,IAAT,EAAeO,YAAf,EAA6BC,eAAe,CAACK,KAAhB,CAAsBC,EAAnD;AACD;;AAEDC,EAAAA,mBAAmB,GAAG;AACpB,cAASC,IAAT,GAAgB;AACb,UAAIC,IAAI,GAAGhB,IAAI,CAACiB,KAAL,CAAWjB,IAAI,CAACE,MAAL,MAAiB,OAAO,GAAxB,CAAX,IAA2C,GAAtD;AACAgB,MAAAA,UAAU,CAAC,YAAW;AACdrB,QAAAA,GAAG;AACHkB,QAAAA,IAAI;AACX,OAHS,EAGPC,IAHO,CAAV;AAIH,KANA,GAAD;AAOA;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACC;AAAK,MAAA,EAAE,EAAE,KAAKP,KAAL,CAAWC,EAApB;AAAwB,MAAA,SAAS,6BAAsB,KAAKD,KAAL,CAAWQ,OAAjC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADD;AAQD;;AArCoD","sourcesContent":["import React from 'react';\n\n\nexport class FloatingMonster extends React.Component {\n\nboo() {let viewport = ['top', 'right', 'bottom', 'left'];\n  let side = viewport[Math.floor(Math.random() * viewport.length)];\n  console.log(side);\n\n  //Pick a location on that side\n  let sideLocation = Math.random() * 100 + '%';\n  console.log(sideLocation);\n  \n  //Pick a Monster\n  let selectedMonster = this.state.floatingMonsterArray[Math.floor(Math.random() * this.state.floatingMonsterArray.length)];\n  console.log(JSON.stringify(selectedMonster));\n  \n  //Animate it\n  this.boo(side, sideLocation, selectedMonster.props.id);\n}\n\nonComponentDidMount() {\n\t(function loop() {\n\t    var rand = Math.round(Math.random() * (3000 - 500)) + 500;\n\t    setTimeout(function() {\n\t            boo()\n\t            loop();  \n\t    }, rand);\n\t}());\n}\n\nrender() {\n\t\treturn (\n\t\t\t<div id={this.props.id} className={`floating-monster ${this.props.species}`}>\n\t\t\t\t<div className='head' />\n\t\t\t\t<div className='torso' />\n\t\t\t\t<div className='left-arm' />\n\t\t\t\t<div className='right-arm' />\n\t\t\t</div>\n\t\t\t\t)\n}\n\n}"]},"metadata":{},"sourceType":"module"}