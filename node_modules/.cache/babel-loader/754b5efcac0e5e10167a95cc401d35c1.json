{"ast":null,"code":"//Set of animations that pick up a gizmo, move it to the converter, drop it, and reset.\nconst craneToPickup = animate => {\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate, element, 'margin-left', '50%');\n};\n\nconst craneClawLower = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'top', animate.monsterOffsetTop + 'px');\n};\n\nconst craneClawGrab = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'background-color', 'red');\n};\n\nconst craneClawPickup = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'top', '0');\n};\n\nconst monsterPickup = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'top', -animate.monsterOffsetTop + 'px');\n};\n\nconst craneToDrop = animate => {\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate, element, 'margin-left', '80%');\n};\n\nconst monsterToDrop = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'left', '50%');\n};\n\nconst craneClawDrop = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'background-color', 'green');\n};\n\nconst monsterDrop = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'top', '100px');\n};\n\nconst monsterSpin = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'transform', 'rotate(180deg)');\n};\n\nconst craneReset = animate => {\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate, element, 'margin-left', 0);\n};","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoAnimations.js"],"names":["craneToPickup","animate","element","document","getElementById","cssTransitionToPromise","craneClawLower","monsterOffsetTop","craneClawGrab","craneClawPickup","monsterPickup","monsterNumber","craneToDrop","monsterToDrop","craneClawDrop","monsterDrop","monsterSpin","craneReset"],"mappings":"AAAA;AAEA,MAAMA,aAAa,GAAIC,OAAD,IAAa;AACjC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAhB;AACA,SAAQC,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,aAAnB,EAAkC,KAAlC,CAA9B;AACD,CAHD;;AAKA,MAAMI,cAAc,GAAIL,OAAD,IAAa;AAClC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAhB;AACC,SAAQC,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,KAAnB,EAA0BD,OAAO,CAACM,gBAAR,GAA2B,IAArD,CAA9B;AACF,CAHD;;AAKA,MAAMC,aAAa,GAAIP,OAAD,IAAa;AACjC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAhB;AACC,SAAQC,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,kBAAnB,EAAuC,KAAvC,CAA9B;AACF,CAHD;;AAKA,MAAMO,eAAe,GAAIR,OAAD,IAAa;AACpC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAhB;AACE,SAAQC,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,KAAnB,EAA0B,GAA1B,CAA9B;AACF,CAHD;;AAKA,MAAMQ,aAAa,GAAIT,OAAD,IAAa;AAClC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAaH,OAAO,CAACU,aAA7C,CAAhB;AACE,SAAQN,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,KAAnB,EAA0B,CAAED,OAAO,CAACM,gBAAV,GAA6B,IAAvD,CAA9B;AACF,CAHD;;AAKA,MAAMK,WAAW,GAAIX,OAAD,IAAa;AAChC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAhB;AACE,SAAQC,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,aAAnB,EAAkC,KAAlC,CAA9B;AACF,CAHD;;AAKA,MAAMW,aAAa,GAAIZ,OAAD,IAAa;AAClC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAaH,OAAO,CAACU,aAA7C,CAAhB;AACE,SAAQN,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,MAAnB,EAA2B,KAA3B,CAA9B;AACF,CAHD;;AAKA,MAAMY,aAAa,GAAIb,OAAD,IAAa;AAClC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAhB;AACE,SAAQC,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,kBAAnB,EAAuC,OAAvC,CAA9B;AACF,CAHD;;AAKA,MAAMa,WAAW,GAAId,OAAD,IAAa;AAChC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAaH,OAAO,CAACU,aAA7C,CAAhB;AACE,SAAQN,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,KAAnB,EAA0B,OAA1B,CAA9B;AACF,CAHD;;AAKA,MAAMc,WAAW,GAAIf,OAAD,IAAa;AAChC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAaH,OAAO,CAACU,aAA7C,CAAhB;AACE,SAAQN,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,WAAnB,EAAgC,gBAAhC,CAA9B;AACF,CAHD;;AAKA,MAAMe,UAAU,GAAIhB,OAAD,IAAa;AAC9B,QAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAhB;AACA,SAAQC,sBAAsB,CAACJ,OAAD,EAAUC,OAAV,EAAmB,aAAnB,EAAkC,CAAlC,CAA9B;AACD,CAHD","sourcesContent":["//Set of animations that pick up a gizmo, move it to the converter, drop it, and reset.\n\nconst craneToPickup = (animate) => {\n  const element = document.getElementById('crane');\n  return (cssTransitionToPromise(animate, element, 'margin-left', '50%'))\n}\n\nconst craneClawLower = (animate) => {\n  const element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'top', animate.monsterOffsetTop + 'px'))\n}\n\nconst craneClawGrab = (animate) => {\n  const element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'background-color', 'red'))\n}\n\nconst craneClawPickup = (animate) => {\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'top', '0'))\n}\n\nconst monsterPickup = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'top', - animate.monsterOffsetTop + 'px'))\n}\n\nconst craneToDrop = (animate) => {\n\tconst element = document.getElementById('crane');\n   return (cssTransitionToPromise(animate, element, 'margin-left', '80%'))\n}\n\nconst monsterToDrop = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'left', '50%'))\n}\n\nconst craneClawDrop = (animate) => {\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'background-color', 'green'))\n}\n\nconst monsterDrop = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'top', '100px'))\n}\n\nconst monsterSpin = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'transform', 'rotate(180deg)'))\n}\n\nconst craneReset = (animate) => {\n  const element = document.getElementById('crane');\n  return (cssTransitionToPromise(animate, element, 'margin-left', 0))\n}\n\n\n"]},"metadata":{},"sourceType":"module"}