{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nimport { Crane } from './crane';\nimport './gizmo.css';\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gizmoCount: 0,\n      gizmoArray: [],\n      animationQueue: [],\n      currentAnimation: []\n    };\n\n    this.createGizmo = () => {\n      this.setState({\n        gizmoCount: this.state.gizmoCount + 1,\n        gizmoArray: [...this.state.gizmoArray, React.createElement(Gizmo, Object.assign({\n          key: this.state.gizmoCount,\n          number: this.state.gizmoCount,\n          onFilterOut: this.convertMonster\n        }, this.state, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }))]\n      });\n    };\n\n    this.convertMonster = this.convertMonster.bind(this);\n    this.pickUpMonster = this.pickUpMonster.bind(this);\n    this.removeMonster = this.removeMonster.bind(this);\n  }\n\n  convertMonster(monsterNumber) {\n    console.log('monsterNumber: ' + monsterNumber); //this.craneIn(monsterNumber);\n\n    this.setState({\n      animationQueue: [{\n        a,\n        priority: 1\n      }, {\n        b,\n        priority: 2\n      }, {\n        c,\n        priority: 3\n      }, {\n        d,\n        priority: 3\n      }],\n      currentAnimation: []\n    });\n  }\n\n  craneIn(monsterNumber) {\n    console.log('craneIn');\n    const element = document.getElementById('crane'); // element.addEventListener('animationend', () => {\n    //      element.classList.add('crane-move-left');\n    //    });\n\n    element.classList.add('crane-move-right');\n  }\n\n  pickUpMonster(monsterNumber) {//const element = document.getElementById('crane');\n    //console.log(this.state.gizmoArray[monsterNumber]);\n    //console.log(this.gizmoRef.current);\n  }\n\n  removeMonster(monsterNumber) {\n    console.log('removeMonster'); // run some animation here, wait till its done, and then fire set state like below.\n\n    this.setState({\n      gizmoArray: this.state.gizmoArray.filter(function (item) {\n        return item.props.number !== monsterNumber;\n      })\n    });\n  }\n\n  componentWillUpdate(prevProps, prevState) {\n    if (prevState.animationQueue !== this.state.animationQueue) {\n      console.log('componentWillUpdate called: ' + this.state.animationQueue);\n      this.state.animationQueue.forEach(function (animation, index) {\n        console.log(index);\n        console.log(animation);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gizmos-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Crane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"gizmo-button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(GizmoButton, {\n      onClick: this.createGizmo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"gizmo-creater\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.gizmoArray), React.createElement(\"section\", {\n      className: \"gizmo-converter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"need to design a converter\")), React.createElement(\"section\", {\n      className: \"gizmo-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"need to design a gizmo result\")));\n  }\n\n}\n\nconst a = () => {\n  setTimeout(function () {\n    alert('A');\n  }, 2000);\n};\n\nconst b = () => {\n  setTimeout(function () {\n    alert('B');\n  }, 2000);\n};\n\nconst c = () => {\n  setTimeout(function () {\n    alert('C');\n  }, 2000);\n};\n\nconst d = () => {\n  setTimeout(function () {\n    alert('D');\n  }, 2000);\n};\n\nconst e = () => {\n  setTimeout(function () {\n    alert('E');\n    return 'done';\n  }, 2000);\n};\n\nconst f = () => {\n  setTimeout(function () {\n    alert('F');\n  }, 2000);\n};\n\nconst g = () => {\n  setTimeout(function () {\n    alert('G');\n  }, 2000);\n};\n\nclass GizmoButton extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Make a Gizmo\");\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js"],"names":["React","Gizmo","Crane","GizmoSection","Component","constructor","props","state","gizmoCount","gizmoArray","animationQueue","currentAnimation","createGizmo","setState","convertMonster","bind","pickUpMonster","removeMonster","monsterNumber","console","log","a","priority","b","c","d","craneIn","element","document","getElementById","classList","add","filter","item","number","componentWillUpdate","prevProps","prevState","forEach","animation","index","render","setTimeout","alert","e","f","g","GizmoButton","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\nimport {Crane} from './crane';\nimport './gizmo.css';\n\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.convertMonster = this.convertMonster.bind(this);\n\tthis.pickUpMonster = this.pickUpMonster.bind(this);\n\tthis.removeMonster = this.removeMonster.bind(this);\n  }\n  state = {\n    gizmoCount : 0,\n    gizmoArray : [],\n    animationQueue: [],\n    currentAnimation: []\n  }\n\n\tcreateGizmo = () => {\n\t\tthis.setState({\n\t\t\tgizmoCount : this.state.gizmoCount + 1,\n\t\t\tgizmoArray: [...this.state.gizmoArray, <Gizmo key={this.state.gizmoCount} number={this.state.gizmoCount} onFilterOut={this.convertMonster} {...this.state} />]\t\t\t\n\t\t});\n\t}\n\n\tconvertMonster(monsterNumber) {\n\t\tconsole.log('monsterNumber: ' + monsterNumber);\n\t\t//this.craneIn(monsterNumber);\n\t\tthis.setState({\n\t\t\tanimationQueue: [\n\t\t\t  {\n\t\t\t  \ta,\n\t\t\t  \tpriority: 1\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tb,\n\t\t\t  \tpriority: 2\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tc,\n\t\t\t  \tpriority: 3\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \td,\n\t\t\t  \tpriority: 3\n\t\t\t  }\n\t\t\t],\n\t\t\tcurrentAnimation: []\n\t\t});\n\t}\n\n\tcraneIn(monsterNumber) {\n\t\tconsole.log('craneIn');\n\t\t\n\t\tconst element = document.getElementById('crane');\n\n\t\t// element.addEventListener('animationend', () => {\n\t //      element.classList.add('crane-move-left');\n\t //    });\n\t\telement.classList.add('crane-move-right');\n\t}\n\n\tpickUpMonster(monsterNumber) {\n\t\t//const element = document.getElementById('crane');\n\t\t//console.log(this.state.gizmoArray[monsterNumber]);\n\t\t//console.log(this.gizmoRef.current);\n\t}\n\n\tremoveMonster(monsterNumber) {\n\t\tconsole.log('removeMonster');\n\n\t\t// run some animation here, wait till its done, and then fire set state like below.\n\n\t\tthis.setState({\n\t\t\tgizmoArray : this.state.gizmoArray.filter(function(item) {\n\t\t\t\treturn item.props.number !== monsterNumber\n\t\t\t})\n\t\t});\n\t}\n\n\tcomponentWillUpdate(prevProps, prevState) {\n\t\tif (prevState.animationQueue !== this.state.animationQueue) {\n\t\t\tconsole.log('componentWillUpdate called: ' + this.state.animationQueue);\n\t\t\tthis.state.animationQueue.forEach(function(animation, index) {\n\t\t\t\tconsole.log(index);\n\t\t\t\tconsole.log(animation);\n\t\t\t});\n\t\t}\n    }\n\n\trender() {\n\t\treturn (\n\t\t  <div className='gizmos-container'>\n\t\t  \t<Crane />\n\t\t    <section className=\"gizmo-button-container\">\n\t\t      <GizmoButton onClick={this.createGizmo} />\n\t\t    </section>\n\t\t\t  <section className=\"gizmo-creater\">\n\t\t\t\t{this.state.gizmoArray}\n\t\t\t</section>\n            <section className=\"gizmo-converter\">\n             <p>need to design a converter</p>\n            </section>\n            <section className=\"gizmo-result\">\n             <p>need to design a gizmo result</p>\n            </section>\n\t      </div>\n\t\t)\n\t}\n}\n\n\nconst a = () => {\n\tsetTimeout(function() {\n\t\talert('A');\n\t}, 2000);\n}\n\nconst b = () => {\n\t\tsetTimeout(function() {\n\t\t\talert('B');\n\t\t}, 2000);\n\t}\n\nconst c = () => {\n\tsetTimeout(function() {\n\t\talert('C');\n\t}, 2000);\n}\n\nconst d = () => {\n\tsetTimeout(function() {\n\t\talert('D');\n\t}, 2000);\n}\n\nconst e = () => {\n\tsetTimeout(function() {\n\t\talert('E');\n\t\treturn('done')\n\t}, 2000);\n}\n\nconst f = () => {\n  setTimeout(function() {\n\t\talert('F');\n\t}, 2000);\n}\n\nconst g = () => {\n  setTimeout(function() {\n\t\talert('G');\n\t}, 2000);\n}\n\nclass GizmoButton extends React.Component {\n  render() {\n    \n    return (\n      <button onClick={this.props.onClick}>Make a Gizmo</button>\n    ) \n\n  }\n}"]},"metadata":{},"sourceType":"module"}