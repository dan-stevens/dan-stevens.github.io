{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmo.js\";\nimport React from 'react';\nimport updateMonitor from '/monitor';\nexport class Gizmo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.monsterDOMRef = React.createRef(); // Coordinates in DOM used for animation\n\n    this.state = {\n      preMountEvents: ''\n    };\n    this.componentLifeCycleEvent = this.componentLifeCycleEvent.bind(this);\n  }\n\n  componentLifeCycleEvent(lifeCycleEvent, prevProps, prevState) {//document.getElementById('gizmo-updates-screen').prepend(lifeCycleEvent);\n  }\n\n  componentWillMount() {\n    this.setState({\n      preMountEvents: 'componentWillMount called'\n    });\n  }\n\n  componentDidMount() {\n    this.componentLifeCycleEvent('componentDidMount called');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.componentLifeCycleEvent('componentDidUpdate called', prevProps.number, prevState);\n    }\n\n    if (prevProps.number !== this.props.number) {}\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gizmo\",\n      id: 'gizmoId',\n      ref: this.monsterDOMRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wheel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wheel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmo.js"],"names":["React","updateMonitor","Gizmo","Component","constructor","props","monsterDOMRef","createRef","state","preMountEvents","componentLifeCycleEvent","bind","lifeCycleEvent","prevProps","prevState","componentWillMount","setState","componentDidMount","componentDidUpdate","number","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,UAA1B;AAEA,OAAO,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqBN,KAAK,CAACO,SAAN,EAArB,CAFiB,CAEuB;;AACxC,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE;AADL,KAAb;AAGA,SAAKC,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CAA/B;AACD;;AAODD,EAAAA,uBAAuB,CAACE,cAAD,EAAiBC,SAAjB,EAA4BC,SAA5B,EAAuC,CAC5D;AAED;;AAEDC,EAAAA,kBAAkB,GAAG;AACtB,SAAKC,QAAL,CAAc;AACbP,MAAAA,cAAc,EAAE;AADH,KAAd;AAGE;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,uBAAL,CAA6B,0BAA7B;AACD;;AAEDQ,EAAAA,kBAAkB,CAACL,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAIA,SAAS,KAAK,KAAKN,KAAvB,EAA8B;AAC7B,WAAKE,uBAAL,CAA6B,2BAA7B,EAA0DG,SAAS,CAACM,MAApE,EAA4EL,SAA5E;AACA;;AACD,QAAID,SAAS,CAACM,MAAV,KAAqB,KAAKd,KAAL,CAAWc,MAApC,EAA4C,CAC3C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAIV,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAE,SAA3B;AAAsC,MAAA,GAAG,EAAE,KAAKd,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADF;AAME;;AAhDwC","sourcesContent":["import React from 'react';\nimport updateMonitor from '/monitor';\n\nexport class Gizmo extends React.Component {\n  constructor(props) {\n    super(props);    \n    this.monsterDOMRef = React.createRef(); // Coordinates in DOM used for animation\n    this.state = {     \n      preMountEvents: ''\n    };\n    this.componentLifeCycleEvent = this.componentLifeCycleEvent.bind(this);\n  }\n\n\n\n\n\n\n  componentLifeCycleEvent(lifeCycleEvent, prevProps, prevState) {\n    //document.getElementById('gizmo-updates-screen').prepend(lifeCycleEvent);\n\n  }\n\n  componentWillMount() {\n\tthis.setState({\n\t\tpreMountEvents: 'componentWillMount called'\n \t});\n  }\n\n  componentDidMount() {\n    this.componentLifeCycleEvent('componentDidMount called');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n  \tif (prevState !== this.state) {\n  \t\tthis.componentLifeCycleEvent('componentDidUpdate called', prevProps.number, prevState);\n  \t}\n  \tif (prevProps.number !== this.props.number) {\n  \t}\n  }  \n\n  render() {\n\n    \n\n\treturn (    \n\t  <div className='gizmo' id={'gizmoId'} ref={this.monsterDOMRef}>\n      <div className='wheel' />\n      <div className='wheel' />\n    </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}