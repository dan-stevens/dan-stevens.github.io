{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/floatingMonster.js\";\nimport React from 'react';\nexport class FloatingMonster extends React.Component {\n  constructor(props) {\n    super(props);\n    this.boo = this.boo.bind(this);\n    this.floatingMonsterRef = React.createRef();\n  }\n\n  boo(floatingMonster) {\n    console.log('boo' + floatingMonster);\n    let viewport = ['top', 'right', 'bottom', 'left'];\n    let side = viewport[Math.floor(Math.random() * viewport.length)];\n    console.log(side); //Pick a location on that side\n\n    let sideLocation = Math.random() * 100 + '%';\n    console.log(sideLocation); //Pick a Monster\n    //let selectedMonster = this.state.floatingMonsterArray[Math.floor(Math.random() * this.state.floatingMonsterArray.length)];\n    //console.log(JSON.stringify(selectedMonster));\n    //Animate it\n\n    console.log(floatingMonster);\n\n    switch (side) {\n      case 'top':\n        window.setTimeout(function () {\n          document.getElementById(floatingMonster).style['left'] = sideLocation;\n          document.getElementById(floatingMonster).className += ' floating-monster-top';\n        }, 50);\n        break;\n\n      case 'right':\n        window.setTimeout(function () {\n          document.getElementById(floatingMonster).style['top'] = sideLocation;\n          document.getElementById(floatingMonster).className += ' floating-monster-right';\n        }, 50);\n        break;\n\n      case 'bottom':\n        window.setTimeout(function () {\n          document.getElementById(floatingMonster).style['left'] = sideLocation;\n          document.getElementById(floatingMonster).className += ' floating-monster-bottom';\n        }, 50);\n        break;\n\n      case 'left':\n        window.setTimeout(function () {\n          document.getElementById(floatingMonster).style['top'] = sideLocation;\n          document.getElementById(floatingMonster).className += ' floating-monster-left';\n        }, 50);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  componentDidMount() {\n    (function loop() {\n      var rand = Math.round(Math.random() * (3000 - 500)) + 500;\n      let floatingMonsterTimer = setTimeout(() => {\n        this.boo(this.floatingMonsterRef); //Need to send this floating monster\n\n        loop();\n      }, rand); // setTimeout(() = () => {\n      // \tthis.boo(this.floatingMonsterRef)//Need to send this floating monster\n      //     loop();  \n      // }), rand);\n      // setTimeout(function() {\n      // }.bind(this), rand);\n    }).bind(this)();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: this.props.id,\n      className: \"floating-monster \".concat(this.props.species),\n      ref: this.floatingMonsterRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"torso\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"left-arm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"right-arm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/floatingMonster.js"],"names":["React","FloatingMonster","Component","constructor","props","boo","bind","floatingMonsterRef","createRef","floatingMonster","console","log","viewport","side","Math","floor","random","length","sideLocation","window","setTimeout","document","getElementById","style","className","componentDidMount","loop","rand","round","floatingMonsterTimer","render","id","species"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nexport class FloatingMonster extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.boo = this.boo.bind(this);\n\t\tthis.floatingMonsterRef = React.createRef();\n\t}\n\n\nboo(floatingMonster) {\n\tconsole.log('boo' + floatingMonster);\n  let viewport = ['top', 'right', 'bottom', 'left'];\n  let side = viewport[Math.floor(Math.random() * viewport.length)];\n  console.log(side);\n\n  //Pick a location on that side\n  let sideLocation = Math.random() * 100 + '%';\n  console.log(sideLocation);\n  \n  //Pick a Monster\n  //let selectedMonster = this.state.floatingMonsterArray[Math.floor(Math.random() * this.state.floatingMonsterArray.length)];\n  //console.log(JSON.stringify(selectedMonster));\n  \n  //Animate it\n  console.log(floatingMonster);\n  switch(side) {\n\tcase 'top': \n\twindow.setTimeout( function() {\n      document.getElementById(floatingMonster).style['left'] = sideLocation;\n\t  document.getElementById(floatingMonster).className += ' floating-monster-top';\n\t  }, 50);\n\tbreak;\n\n\tcase 'right':\n\twindow.setTimeout( function() {\n      document.getElementById(floatingMonster).style['top'] = sideLocation;\n\t  document.getElementById(floatingMonster).className += ' floating-monster-right';  \n\t  }, 50);\n\tbreak;\n\n\tcase 'bottom':\n\twindow.setTimeout( function() {\n\t  document.getElementById(floatingMonster).style['left'] = sideLocation;\n      document.getElementById(floatingMonster).className += ' floating-monster-bottom';\n      }, 50);\n\tbreak;\n\n\tcase 'left':\n\twindow.setTimeout( function() {\n\t  document.getElementById(floatingMonster).style['top'] = sideLocation;\n      document.getElementById(floatingMonster).className += ' floating-monster-left';\n      }, 50);\n\tbreak;\n\tdefault:\n\treturn\n  }\n}\n\ncomponentDidMount() {\n\t(function loop() {\n\t    var rand = Math.round(Math.random() * (3000 - 500)) + 500;\n\n\t    let floatingMonsterTimer = setTimeout((() => {\n\t\t    this.boo(this.floatingMonsterRef)//Need to send this floating monster\n\t\t    loop();  \n\t\t}), rand);\n\n\n\n\n\t    // setTimeout(() = () => {\n\t    // \tthis.boo(this.floatingMonsterRef)//Need to send this floating monster\n\t    //     loop();  \n\t    // }), rand);\n\n\n\t    // setTimeout(function() {\n\t            \n\t    // }.bind(this), rand);\n\t}.bind(this)());\n}\n\nrender() {\n\t\treturn (\n\t\t\t<div id={this.props.id} className={`floating-monster ${this.props.species}`} ref={this.floatingMonsterRef}>\n\t\t\t\t<div className='head' />\n\t\t\t\t<div className='torso' />\n\t\t\t\t<div className='left-arm' />\n\t\t\t\t<div className='right-arm' />\n\t\t\t</div>\n\t\t\t\t)\n}\n\n}"]},"metadata":{},"sourceType":"module"}