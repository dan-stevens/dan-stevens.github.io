{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/vehicle.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nimport { Frame } from './frame';\nexport class Vehicle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.cycleFrameType = frameTypeCount => {\n      let nextFrame = this.state.currentFrameType; //if (this.state.currentFrameType <= frameTypeCount) {\n\n      nextFrame++; //}\n      // else {\n      // \tnextFrame = 0;\n      // }\n\n      this.setState({\n        currentFrameType: nextFrame\n      });\n    };\n\n    this.cycleFrameOption = () => {\n      let nextOption = this.state.currentFrameOption;\n\n      if (this.state.currentFrameOption <= 6) {\n        nextOption++;\n      } else {\n        nextOption = 0;\n      }\n\n      this.setState({\n        currentFrameOption: nextOption\n      });\n    };\n\n    this.resetFrameOption = () => {\n      this.setState({\n        currentFrameOption: 0\n      });\n    };\n\n    this.state = {\n      displayFrame: false,\n      currentFrameType: 0,\n      currentFrameOption: 0\n    };\n  }\n\n  componentWillUpdate(prevProps, prevState) {\n    if (this.props.displayFrame && this.state.displayFrame === false) {\n      this.setState({\n        displayFrame: true\n      });\n    }\n\n    if (!this.props.displayFrame && this.state.displayFrame === true) {\n      this.setState({\n        displayFrame: false\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.newVehicle();\n    this.setState({\n      displayFrame: false\n    }); //Need to create a new Vehicle component that moves around\n    //this.props.onCreateMonster(this.state, this.props);\n  }\n\n  render() {\n    let frame;\n\n    if (this.state.displayFrame) {\n      frame = React.createElement(Frame, {\n        currentFrameType: this.state.currentFrameType,\n        cycleFrameType: this.cycleFrameType,\n        currentFrameOption: this.state.currentFrameOption,\n        resetFrameOption: this.resetFrameOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"vehicle\",\n      id: 'vehicleId' + this.props.currentVehicleId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Gizmo, {\n      onCreateMonster: this.createMonster,\n      currentFrameType: this.props.currentFrameType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), frame);\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/vehicle.js"],"names":["React","Gizmo","Frame","Vehicle","Component","constructor","props","cycleFrameType","frameTypeCount","nextFrame","state","currentFrameType","setState","cycleFrameOption","nextOption","currentFrameOption","resetFrameOption","displayFrame","componentWillUpdate","prevProps","prevState","componentWillUnmount","newVehicle","render","frame","currentVehicleId","createMonster"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,KAAR,QAAoB,SAApB;AAEA,OAAO,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgCnBC,cAhCmB,GAgCDC,cAAD,IAAoB;AACpC,UAAIC,SAAS,GAAE,KAAKC,KAAL,CAAWC,gBAA1B,CADoC,CAEpC;;AACCF,MAAAA,SAAS,GAH0B,CAIpC;AACA;AACA;AACA;;AACA,WAAKG,QAAL,CAAc;AACbD,QAAAA,gBAAgB,EAAEF;AADL,OAAd;AAGA,KA3CkB;;AAAA,SA6CnBI,gBA7CmB,GA6CA,MAAM;AACxB,UAAIC,UAAU,GAAE,KAAKJ,KAAL,CAAWK,kBAA3B;;AACA,UAAI,KAAKL,KAAL,CAAWK,kBAAX,IAAiC,CAArC,EAAwC;AACvCD,QAAAA,UAAU;AACV,OAFD,MAGK;AACJA,QAAAA,UAAU,GAAG,CAAb;AACA;;AACD,WAAKF,QAAL,CAAc;AACbG,QAAAA,kBAAkB,EAAED;AADP,OAAd;AAGA,KAxDkB;;AAAA,SA0DnBE,gBA1DmB,GA0DA,MAAM;AACxB,WAAKJ,QAAL,CAAc;AACbG,QAAAA,kBAAkB,EAAE;AADP,OAAd;AAGA,KA9DkB;;AAGjB,SAAKL,KAAL,GAAa;AACXO,MAAAA,YAAY,EAAE,KADH;AAEXN,MAAAA,gBAAgB,EAAE,CAFP;AAGXI,MAAAA,kBAAkB,EAAE;AAHT,KAAb;AAKD;;AAEDG,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACzC,QAAI,KAAKd,KAAL,CAAWW,YAAX,IAA2B,KAAKP,KAAL,CAAWO,YAAX,KAA4B,KAA3D,EAAkE;AACjE,WAAKL,QAAL,CAAc;AACbK,QAAAA,YAAY,EAAE;AADD,OAAd;AAGA;;AACD,QAAI,CAAC,KAAKX,KAAL,CAAWW,YAAZ,IAA4B,KAAKP,KAAL,CAAWO,YAAX,KAA4B,IAA5D,EAAkE;AACjE,WAAKL,QAAL,CAAc;AACbK,QAAAA,YAAY,EAAE;AADD,OAAd;AAGA;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AACtB,SAAKf,KAAL,CAAWgB,UAAX;AACA,SAAKV,QAAL,CAAc;AACbK,MAAAA,YAAY,EAAE;AADD,KAAd,EAFsB,CAKtB;AACG;AACD;;AAkCHM,EAAAA,MAAM,GAAG;AAER,QAAIC,KAAJ;;AAEA,QAAI,KAAKd,KAAL,CAAWO,YAAf,EAA6B;AAC5BO,MAAAA,KAAK,GAAG,oBAAC,KAAD;AAAO,QAAA,gBAAgB,EAAE,KAAKd,KAAL,CAAWC,gBAApC;AAAsD,QAAA,cAAc,EAAE,KAAKJ,cAA3E;AAA2F,QAAA,kBAAkB,EAAE,KAAKG,KAAL,CAAWK,kBAA1H;AAA8I,QAAA,gBAAgB,EAAE,KAAKC,gBAArK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACA;;AAED,WACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,EAAE,EAAE,cAAc,KAAKV,KAAL,CAAWmB,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKC,aAA7B;AAA4C,MAAA,gBAAgB,EAAE,KAAKpB,KAAL,CAAWK,gBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEEa,KAFF,CADD;AAMA;;AA/E2C","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\nimport {Frame} from './frame';\n\nexport class Vehicle extends React.Component {\n\tconstructor(props) {\n\t  super(props);\n\n\t  this.state = {\n\t    displayFrame: false,\n\t    currentFrameType: 0,\n\t    currentFrameOption: 0\n\t  }\t  \n\t}\n\n\tcomponentWillUpdate(prevProps, prevState) {\t\t\n\t\tif (this.props.displayFrame && this.state.displayFrame === false) {\t\t\t\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tdisplayFrame: true\n\t\t\t})\n\t\t}\n\t\tif (!this.props.displayFrame && this.state.displayFrame === true) {\t\t\t\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tdisplayFrame: false\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\t\t\t\n\t\tthis.props.newVehicle();\n\t\tthis.setState({\n\t\t\tdisplayFrame: false\n\t\t})\n\t\t//Need to create a new Vehicle component that moves around\n    \t//this.props.onCreateMonster(this.state, this.props);\n  \t}\n\n\tcycleFrameType = (frameTypeCount) => {\n\t\tlet nextFrame= this.state.currentFrameType;\n\t\t//if (this.state.currentFrameType <= frameTypeCount) {\n\t\t\tnextFrame++;\n\t\t//}\n\t\t// else {\n\t\t// \tnextFrame = 0;\n\t\t// }\n\t\tthis.setState({\n\t\t\tcurrentFrameType: nextFrame\t\t\n\t\t});\n\t}\n\n\tcycleFrameOption = () => {\n\t\tlet nextOption= this.state.currentFrameOption;\n\t\tif (this.state.currentFrameOption <= 6) {\n\t\t\tnextOption++;\n\t\t}\n\t\telse {\n\t\t\tnextOption = 0;\n\t\t}\n\t\tthis.setState({\n\t\t\tcurrentFrameOption: nextOption\t\t\n\t\t});\n\t}\n\n\tresetFrameOption = () => {\n\t\tthis.setState({\n\t\t\tcurrentFrameOption: 0\n\t\t});\n\t}\n\t\n\trender() {\n\n\t\tlet frame\n\n\t\tif (this.state.displayFrame) {\n\t\t\tframe = <Frame currentFrameType={this.state.currentFrameType} cycleFrameType={this.cycleFrameType} currentFrameOption={this.state.currentFrameOption} resetFrameOption={this.resetFrameOption} />\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='vehicle' id={'vehicleId' + this.props.currentVehicleId}>\n\t\t\t\t<Gizmo onCreateMonster={this.createMonster} currentFrameType={this.props.currentFrameType} />\t\t\t\t\n\t\t\t\t{frame}\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}