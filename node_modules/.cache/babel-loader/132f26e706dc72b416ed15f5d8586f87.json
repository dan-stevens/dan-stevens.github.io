{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/parentGizmo.js\";\nimport React from 'react';\nimport { ChildGizmo } from './childGizmo'; // const ListItem = ({ value }) => (\n//   <li>{value}</li>\n// );\n// const List = ({ items }) => (\n//   <ul>\n//     {\n//       items.map((item, i) => <ListItem key={i} value={item} />)\n//     }\n//   </ul>\n// );\n\nexport class ParentGizmo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      backgroundColor: '#fff',\n      width: '200px',\n      height: '100px',\n      borderRadius: '0px',\n      componentEvents: [],\n      latestComponentEvent: ''\n    };\n    this.toggleColor = this.toggleColor.bind(this);\n    this.toggleHeight = this.toggleHeight.bind(this);\n    this.toggleWidth = this.toggleWidth.bind(this);\n    this.toggleCorners = this.toggleCorners.bind(this);\n    this.componentLifeCycleEvent = this.componentLifeCycleEvent.bind(this);\n  }\n\n  toggleColor() {\n    this.setState({\n      backgroundColor: this.state.backgroundColor === '#fff' ? '#000' : '#fff'\n    });\n  }\n\n  toggleHeight() {\n    this.setState({\n      height: this.state.height === '100px' ? '200px' : '100px'\n    });\n  }\n\n  toggleWidth() {\n    this.setState({\n      width: this.state.width === '200px' ? '300px' : '200px'\n    });\n  }\n\n  toggleCorners() {\n    this.setState({\n      borderRadius: this.state.borderRadius === '0px' ? '50px' : '0px'\n    });\n  }\n\n  componentLifeCycleEvent(lifeCycleEvent) {\n    console.log('componentLifeCycleEvent called'); // const { latestComponentEvent, componentEvents } = this.state;   \t\n    // const nextState = [...componentEvents, lifeCycleEvent];\n    // this.setState({ componentEvents: nextState });\n  }\n\n  componentWillMount() {\n    this.componentLifeCycleEvent('componentWillMount called');\n  }\n\n  componentDidMount() {\n    //this.componentLifeCycleEvent('componentDidMount called');\n    var node = document.createElement(\"LI\");\n    var textnode = document.createTextNode(\"Water\");\n    node.appendChild(textnode);\n    this.myRef.current.innerHTML += 'lifeCycleEvent';\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('previous state:');\n    console.log(prevState);\n    console.log('next state:');\n    console.log(this.state);\n\n    if (prevState !== this.state) {\n      console.log('!!!!! duh'); //this.componentLifeCycleEvent('componentDidUpdate');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: this.state.backgroundColor,\n        width: this.state.width,\n        height: this.state.height,\n        borderRadius: this.state.borderRadius\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      ref: this.myRef,\n      className: \"gizmo-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(ChildGizmo, {\n      onChangeColor: this.toggleColor,\n      onChangeHeight: this.toggleHeight,\n      onChangeWidth: this.toggleWidth,\n      onChangeCorners: this.toggleCorners,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/parentGizmo.js"],"names":["React","ChildGizmo","ParentGizmo","Component","constructor","props","myRef","createRef","state","backgroundColor","width","height","borderRadius","componentEvents","latestComponentEvent","toggleColor","bind","toggleHeight","toggleWidth","toggleCorners","componentLifeCycleEvent","setState","lifeCycleEvent","console","log","componentWillMount","componentDidMount","node","document","createElement","textnode","createTextNode","appendChild","current","innerHTML","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {ChildGizmo} from './childGizmo';\n\n// const ListItem = ({ value }) => (\n//   <li>{value}</li>\n// );\n\n// const List = ({ items }) => (\n//   <ul>\n//     {\n//       items.map((item, i) => <ListItem key={i} value={item} />)\n//     }\n//   </ul>\n// );\n\nexport class ParentGizmo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      backgroundColor: '#fff',\n      width: '200px',\n      height: '100px',\n      borderRadius: '0px',\n      componentEvents: [],\n      latestComponentEvent: ''\n    };\n    this.toggleColor = this.toggleColor.bind(this);\n    this.toggleHeight = this.toggleHeight.bind(this);\n    this.toggleWidth = this.toggleWidth.bind(this);\n    this.toggleCorners = this.toggleCorners.bind(this);\n    this.componentLifeCycleEvent = this.componentLifeCycleEvent.bind(this);\n}\n\ntoggleColor() {\t\n\tthis.setState({\n\t\tbackgroundColor: this.state.backgroundColor === '#fff' ? '#000' : '#fff'\t\t\t\n\t});\n}\n\ntoggleHeight() {\n\tthis.setState({\n\t\theight: this.state.height === '100px' ? '200px' : '100px'\n\t});\n}\n\ntoggleWidth() {\n\tthis.setState({\n\t\twidth: this.state.width === '200px' ? '300px' : '200px'\n\t});\n}\n\ntoggleCorners() {\n\tthis.setState({\n\t\tborderRadius: this.state.borderRadius === '0px' ? '50px' : '0px'\n\t});\n}\n\ncomponentLifeCycleEvent(lifeCycleEvent) {\n  console.log('componentLifeCycleEvent called');\n\n  // const { latestComponentEvent, componentEvents } = this.state;   \t\n  // const nextState = [...componentEvents, lifeCycleEvent];\n  // this.setState({ componentEvents: nextState });\n}\n\ncomponentWillMount() {\n\tthis.componentLifeCycleEvent('componentWillMount called');\n}\n\ncomponentDidMount() {\n  //this.componentLifeCycleEvent('componentDidMount called');\n  var node = document.createElement(\"LI\");\n  var textnode = document.createTextNode(\"Water\");\n  node.appendChild(textnode);\n  this.myRef.current.innerHTML += 'lifeCycleEvent';\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n\tconsole.log('previous state:');\n\tconsole.log(prevState);\n\tconsole.log('next state:');\n\tconsole.log(this.state);\n\tif (prevState !==  this.state) {\n\t\tconsole.log('!!!!! duh');\n\t\t//this.componentLifeCycleEvent('componentDidUpdate');\n\t}\n}\n\nrender() {\n\treturn (\n\t\t<div>\n\t\t\t<div style={{\n\t\t\t\tbackgroundColor: this.state.backgroundColor,\n\t\t\t\twidth: this.state.width,\n\t\t\t\theight: this.state.height,\n\t\t\t\tborderRadius: this.state.borderRadius\n\t\t\t\t}}>\n\t\t\t</div>\n\t\t\t<ul ref={this.myRef} className='gizmo-details' />\n\t\t\t<ChildGizmo \n\t\t\t\tonChangeColor={this.toggleColor}\n\t\t\t\tonChangeHeight={this.toggleHeight}\n\t\t\t\tonChangeWidth={this.toggleWidth}\n\t\t\t\tonChangeCorners={this.toggleCorners}\n\t\t\t/>\n\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}