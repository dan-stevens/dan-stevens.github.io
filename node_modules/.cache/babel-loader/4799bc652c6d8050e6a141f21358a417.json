{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmo.js\";\nimport React from 'react';\nimport { GizmoControls } from './gizmoControls';\nexport class Gizmo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      backgroundColor: this.blockPaint(),\n      width: '200px',\n      height: '100px',\n      borderRadius: '0px',\n      preMountEvents: ''\n    };\n    this.toggleWidth = this.toggleWidth.bind(this);\n    this.toggleCorners = this.toggleCorners.bind(this);\n    this.componentLifeCycleEvent = this.componentLifeCycleEvent.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  blockPaint() {\n    const possibleBlockColors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'];\n    const blockColor = Math.floor(Math.random() * possibleBlockColors.length);\n    return possibleBlockColors[blockColor];\n  }\n\n  blockHeight() {\n    this.setState({\n      height: this.state.height === '100px' ? '200px' : '100px'\n    });\n  }\n\n  toggleWidth() {\n    this.setState({\n      width: this.state.width === '200px' ? '300px' : '200px'\n    });\n  }\n\n  toggleCorners() {\n    this.setState({\n      borderRadius: this.state.borderRadius === '0px' ? '50px' : '0px'\n    });\n  }\n\n  monsterBubble() {}\n\n  removeItem() {\n    this.props.onFilterOut(this.props.number);\n  }\n\n  componentLifeCycleEvent(lifeCycleEvent, prevProps, prevState) {\n    var node = document.createElement(\"li\");\n    var lifeCycleEventText = document.createTextNode(lifeCycleEvent);\n\n    if (prevProps) {\n      console.log('prevProps: ' + prevProps);\n    }\n\n    if (prevState) {\n      console.log('prevState: ' + prevState.backgroundColor);\n    }\n\n    node.appendChild(lifeCycleEventText);\n    this.myRef.current.innerHTML += node.outerHTML;\n  }\n\n  componentWillMount() {\n    this.setState({\n      preMountEvents: 'componentWillMount called'\n    });\n  }\n\n  componentDidMount() {\n    this.componentLifeCycleEvent('componentDidMount called');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('the Gizmo component did update');\n\n    if (prevState !== this.state) {\n      this.componentLifeCycleEvent('componentDidUpdate called', prevProps.number, prevState);\n    }\n\n    if (prevProps.number !== this.props.number) {\n      console.log('theres a difference here');\n      console.log('prevProps:');\n      console.log(prevProps);\n      console.log('this.props');\n      console.log(this.props);\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      backgroundColor: '#fff'\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gizmo\",\n      id: this.props.number,\n      ref: this.props.number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: this.state.backgroundColor,\n        width: this.state.width,\n        borderRadius: this.state.borderRadius\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"My ref prop: \", this.props.number)), React.createElement(\"ul\", {\n      ref: this.myRef,\n      className: \"gizmo-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.preMountEvents)), React.createElement(GizmoControls, {\n      onChangeColor: this.toggleColor,\n      onChangeHeight: this.toggleHeight,\n      onChangeWidth: this.toggleWidth,\n      onChangeCorners: this.toggleCorners,\n      onBuildMonster: this.removeItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmo.js"],"names":["React","GizmoControls","Gizmo","Component","constructor","props","myRef","createRef","state","backgroundColor","blockPaint","width","height","borderRadius","preMountEvents","toggleWidth","bind","toggleCorners","componentLifeCycleEvent","removeItem","possibleBlockColors","blockColor","Math","floor","random","length","blockHeight","setState","monsterBubble","onFilterOut","number","lifeCycleEvent","prevProps","prevState","node","document","createElement","lifeCycleEventText","createTextNode","console","log","appendChild","current","innerHTML","outerHTML","componentWillMount","componentDidMount","componentDidUpdate","componentWillUnmount","render","toggleColor","toggleHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {GizmoControls} from './gizmoControls';\n\nexport class Gizmo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      backgroundColor: this.blockPaint(),\n      width: '200px',\n      height: '100px',\n      borderRadius: '0px',\n      preMountEvents: ''\n    };\n    this.toggleWidth = this.toggleWidth.bind(this);\n    this.toggleCorners = this.toggleCorners.bind(this);\n    this.componentLifeCycleEvent = this.componentLifeCycleEvent.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  blockPaint() {\n  \tconst possibleBlockColors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'];\n  \tconst blockColor = Math.floor(Math.random() * possibleBlockColors.length);\n   \treturn possibleBlockColors[blockColor];\n  }\n\n  blockHeight() {\n    this.setState({\n\t  height: this.state.height === '100px' ? '200px' : '100px'\n    });\n  }\n\n  toggleWidth() {\n\tthis.setState({\n\t\twidth: this.state.width === '200px' ? '300px' : '200px'\n\t});\n  }\n\n  toggleCorners() {\n\tthis.setState({\n\t\tborderRadius: this.state.borderRadius === '0px' ? '50px' : '0px'\n\t});\n  }\n\n  monsterBubble() {\n    \n  }\n\n  removeItem() {\n        this.props.onFilterOut(this.props.number);\n    }\n\n  componentLifeCycleEvent(lifeCycleEvent, prevProps, prevState) {\n    var node = document.createElement(\"li\");\n    var lifeCycleEventText = document.createTextNode(lifeCycleEvent);\n    if(prevProps) {\n  \t  console.log('prevProps: ' + prevProps);\n    }\n    if(prevState) {\n  \t  console.log('prevState: ' + prevState.backgroundColor);\n    }\n  \n    node.appendChild(lifeCycleEventText);\n    this.myRef.current.innerHTML += node.outerHTML;\n  }\n\n  componentWillMount() {\n\tthis.setState({\n\t\tpreMountEvents: 'componentWillMount called'\n \t});\n  }\n\n  componentDidMount() {\n    this.componentLifeCycleEvent('componentDidMount called');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\tconsole.log('the Gizmo component did update');\n\tif (prevState !== this.state) {\n\t\tthis.componentLifeCycleEvent('componentDidUpdate called', prevProps.number, prevState);\n\t}\n\tif (prevProps.number !== this.props.number) {\n\t\tconsole.log('theres a difference here');\n\t\tconsole.log('prevProps:');\n\t\tconsole.log(prevProps);\n\t\tconsole.log('this.props');\n\t\tconsole.log(this.props)\n\t}\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      backgroundColor: '#fff'\n    });\n  }\n\n  render() {\n\treturn (\n\t  <div className='gizmo' id={this.props.number} ref={this.props.number}>\n\t\t<div style={{\n\t\t\tbackgroundColor: this.state.backgroundColor,\n\t\t\twidth: this.state.width,\n\t\t\tborderRadius: this.state.borderRadius\n\t\t\t}}><span>My ref prop: {this.props.number}</span>\n\t\t</div>\n\t\t<ul ref={this.myRef} className='gizmo-details'>\n\t\t<li>{this.state.preMountEvents}</li>\n\t\t</ul>\n\n\t\t<GizmoControls \n\t\t\tonChangeColor={this.toggleColor}\n\t\t\tonChangeHeight={this.toggleHeight}\n\t\t\tonChangeWidth={this.toggleWidth}\n\t\t\tonChangeCorners={this.toggleCorners}\n      onBuildMonster={this.removeItem}\n\t\t/>\n\t  </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}