{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nimport './gizmo.css';\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gizmoCount: 0,\n      gizmoArray: [] //gizmoButtonFunction: ''\n\n    };\n\n    this.createGizmo = () => {\n      this.setState({\n        gizmoCount: this.state.gizmoCount + 1,\n        gizmoArray: [...this.state.gizmoArray, React.createElement(Gizmo, {\n          key: this.state.gizmoCount,\n          number: this.state.gizmoCount,\n          ref: this.gizmoRef,\n          onFilterOut: this.convertGizmo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        })]\n      });\n      console.log(this.gizmoRef.current);\n    };\n\n    this.gizmoRef = React.createRef();\n    this.convertGizmo = this.convertGizmo.bind(this);\n  }\n\n  convertGizmo(toBeFilteredOut) {\n    console.log('Parent' + toBeFilteredOut);\n    const filteredGizmoChildren = this.state.gizmoArray.splice(toBeFilteredOut, 1);\n    filter(function (item) {\n      return item !== toBeFilteredOut;\n    });\n    this.setState({\n      gizmoArray: filteredGizmoChildren\n    });\n  } // toggleGizmoButton() {\n  //   if (this.state.gizmoButtonFunction === 'createGizmo') {\n  //   \tthis.convertGizmo();\t  \t\n  //   }\n  //   else {\n  //   \tthis.createGizmo();\n  //   }\n  // }\n\n\n  render() {\n    //const gizmoChildren = [];\n    // for(let i = 0; i < this.state.gizmoCount; i++) {\n    // \tgizmoChildren.push(<Gizmo key={i} number={i} ref={this.gizmoRef} />)\n    // }\n    return React.createElement(\"div\", {\n      className: \"gizmos-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"gizmo-button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(GizmoButton, {\n      onClick: this.createGizmo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(ParentGizmoContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.gizmoArray), React.createElement(\"section\", {\n      className: \"gizmo-converter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"need to design a converter\")), React.createElement(\"section\", {\n      className: \"gizmo-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"need to design a gizmo result\")));\n  }\n\n}\n\nconst ParentGizmoContainer = props => React.createElement(\"div\", {\n  className: \"gizmo-creater\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"GizmosGoHere\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, props.children));\n\nclass GizmoButton extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Make a Gizmo\");\n  } // const gizmoFunction = this.state.gizmoButtonFunction === 'createGizmo' ? 'convertGizmo' : 'createGizmo';\n  // state = {\n  // \tgizmoButtonFunction : gizmoFunction\n  // }\n\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js"],"names":["React","Gizmo","GizmoSection","Component","constructor","props","state","gizmoCount","gizmoArray","createGizmo","setState","gizmoRef","convertGizmo","console","log","current","createRef","bind","toBeFilteredOut","filteredGizmoChildren","splice","filter","item","render","ParentGizmoContainer","children","GizmoButton","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\nimport './gizmo.css';\n\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.gizmoRef = React.createRef();\n\tthis.convertGizmo = this.convertGizmo.bind(this);\n  }\n\t\tstate = {\n\t\t  gizmoCount : 0,\n\t\t  gizmoArray : [] \n\t\t  //gizmoButtonFunction: ''\n\t\t}\n\n\tcreateGizmo = () => {\n\t\tthis.setState({\n\t\t\tgizmoCount : this.state.gizmoCount + 1,\n\t\t\tgizmoArray: [...this.state.gizmoArray, <Gizmo key={this.state.gizmoCount} number={this.state.gizmoCount} ref={this.gizmoRef} onFilterOut={this.convertGizmo} />]\t\t\t\n\t\t});\n\t\tconsole.log(this.gizmoRef.current);\n\t}\n\n\tconvertGizmo(toBeFilteredOut) {\n\t\tconsole.log('Parent' + toBeFilteredOut);\n\n\t\tconst filteredGizmoChildren = this.state.gizmoArray.splice(toBeFilteredOut, 1);\n\n\n\t\tfilter(function(item) {\n\t\t\treturn item !== toBeFilteredOut;\n\t\t});\n\n\t\tthis.setState({\n\t\t\tgizmoArray : filteredGizmoChildren\n\t\t});\n\t}\n\n\t// toggleGizmoButton() {\n\t//   if (this.state.gizmoButtonFunction === 'createGizmo') {\n\t//   \tthis.convertGizmo();\t  \t\n\t//   }\n\t//   else {\n\t//   \tthis.createGizmo();\n\t//   }\n\t// }\n\n\trender() {\n\t\t//const gizmoChildren = [];\n\t\t// for(let i = 0; i < this.state.gizmoCount; i++) {\n\t\t// \tgizmoChildren.push(<Gizmo key={i} number={i} ref={this.gizmoRef} />)\n\t\t// }\n\n\t\treturn (\n\t\t  <div className='gizmos-container'>\n\t\t    <section className=\"gizmo-button-container\">\n\t\t      <GizmoButton onClick={this.createGizmo} />\n\t\t    </section>\n\t\t\t<ParentGizmoContainer>\n\t\t\t\t{this.state.gizmoArray}\n\t\t\t</ParentGizmoContainer>\n            <section className=\"gizmo-converter\">\n             <p>need to design a converter</p>\n            </section>\n            <section className=\"gizmo-result\">\n             <p>need to design a gizmo result</p>\n            </section>\n\t      </div>\n\t\t)\n\t}\n}\n\nconst ParentGizmoContainer = props => (\n  <div className=\"gizmo-creater\">\n\t<div className=\"GizmosGoHere\">\n\t  {props.children}\n    </div>\n  </div>\n);\n\nclass GizmoButton extends React.Component {\n  render() {\n    \n    return (\n      <button onClick={this.props.onClick}>Make a Gizmo</button>\n    ) \n\n  }\n\t// const gizmoFunction = this.state.gizmoButtonFunction === 'createGizmo' ? 'convertGizmo' : 'createGizmo';\n\t// state = {\n\t// \tgizmoButtonFunction : gizmoFunction\n\t// }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}