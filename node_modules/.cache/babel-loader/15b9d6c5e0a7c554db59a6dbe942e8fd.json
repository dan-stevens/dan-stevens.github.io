{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/parentGizmo.js\";\nimport React from 'react';\nimport { ChildGizmo } from './childGizmo';\n\nconst ListItem = ({\n  value\n}) => React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, value);\n\nconst List = ({\n  items\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, items.map((item, i) => React.createElement(ListItem, {\n  key: i,\n  value: item,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n})));\n\nexport class ParentGizmo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onComponentStateChange = () => {\n      console.log('here');\n      const _this$state = this.state,\n            inputValue = _this$state.inputValue,\n            fruites = _this$state.fruites;\n\n      if (latestComponentEvent) {\n        const nextState = [...componentEvents, latestComponentEvent];\n        console.log(nextState);\n        this.setState({\n          componentEvents: nextState,\n          latestComponentEvent: ''\n        });\n      }\n    };\n\n    this.state = {\n      backgroundColor: '#fff',\n      width: '200px',\n      height: '100px',\n      borderRadius: '0px',\n      componentEvents: ['hey im here', 'and then im here'],\n      latestComponentEvent: 'hi'\n    };\n    this.toggleColor = this.toggleColor.bind(this);\n    this.toggleHeight = this.toggleHeight.bind(this);\n    this.toggleWidth = this.toggleWidth.bind(this);\n    this.toggleCorners = this.toggleCorners.bind(this);\n  }\n\n  toggleColor() {\n    this.setState({\n      backgroundColor: this.state.backgroundColor === '#fff' ? '#000' : '#fff'\n    });\n  }\n\n  toggleHeight() {\n    this.setState({\n      height: this.state.height === '100px' ? '200px' : '100px'\n    });\n  }\n\n  toggleWidth() {\n    this.setState({\n      width: this.state.width === '200px' ? '300px' : '200px'\n    });\n  }\n\n  toggleCorners() {\n    this.setState({\n      borderRadius: this.state.borderRadius === '0px' ? '50px' : '0px'\n    });\n  }\n\n  componentWillMount() {\n    this.setState({\n      latestComponentEvent: 'componentWillMount'\n    });\n    this.onComponentStateChange();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: this.state.backgroundColor,\n        width: this.state.width,\n        height: this.state.height,\n        borderRadius: this.state.borderRadius\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gizmo-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(List, {\n      items: this.state.componentEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(ChildGizmo, {\n      onChangeColor: this.toggleColor,\n      onChangeHeight: this.toggleHeight,\n      onChangeWidth: this.toggleWidth,\n      onChangeCorners: this.toggleCorners,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/parentGizmo.js"],"names":["React","ChildGizmo","ListItem","value","List","items","map","item","i","ParentGizmo","Component","constructor","props","onComponentStateChange","console","log","state","inputValue","fruites","latestComponentEvent","nextState","componentEvents","setState","backgroundColor","width","height","borderRadius","toggleColor","bind","toggleHeight","toggleWidth","toggleCorners","componentWillMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {ChildGizmo} from './childGizmo';\n\nconst ListItem = ({ value }) => (\n  <li>{value}</li>\n);\n\nconst List = ({ items }) => (\n  <ul>\n    {\n      items.map((item, i) => <ListItem key={i} value={item} />)\n    }\n  </ul>\n);\n\nexport class ParentGizmo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: '#fff',\n      width: '200px',\n      height: '100px',\n      borderRadius: '0px',\n      componentEvents: ['hey im here', 'and then im here'],\n      latestComponentEvent: 'hi'\n    };\n    this.toggleColor = this.toggleColor.bind(this);\n    this.toggleHeight = this.toggleHeight.bind(this);\n    this.toggleWidth = this.toggleWidth.bind(this);\n    this.toggleCorners = this.toggleCorners.bind(this);\n}\n\ntoggleColor() {\t\n\tthis.setState({\n\t\tbackgroundColor: this.state.backgroundColor === '#fff' ? '#000' : '#fff'\t\t\t\n\t});\n}\n\ntoggleHeight() {\n\tthis.setState({\n\t\theight: this.state.height === '100px' ? '200px' : '100px'\n\t});\n}\n\ntoggleWidth() {\n\tthis.setState({\n\t\twidth: this.state.width === '200px' ? '300px' : '200px'\n\t});\n}\n\ntoggleCorners() {\n\tthis.setState({\n\t\tborderRadius: this.state.borderRadius === '0px' ? '50px' : '0px'\n\t});\n}\n\nonComponentStateChange = () => {\n\tconsole.log('here');\n\tconst { inputValue, fruites } = this.state;\n    if (latestComponentEvent) {\n      const nextState = [...componentEvents, latestComponentEvent];\n      console.log(nextState);\n      this.setState({ componentEvents: nextState, latestComponentEvent: '' });\n    }\n  }\n\ncomponentWillMount() {\n\tthis.setState({ latestComponentEvent: 'componentWillMount' });\n\tthis.onComponentStateChange();\n}\n\nrender() {\n\treturn (\n\t\t<div>\n\t\t\t<div style={{\n\t\t\t\tbackgroundColor: this.state.backgroundColor,\n\t\t\t\twidth: this.state.width,\n\t\t\t\theight: this.state.height,\n\t\t\t\tborderRadius: this.state.borderRadius\n\t\t\t\t}}>\n\t\t\t</div>\n\t\t\t<div className='gizmo-details'>\n\t\t\t      <List items={this.state.componentEvents} />\n\t\t\t</div>\n\t\t\t<ChildGizmo \n\t\t\t\tonChangeColor={this.toggleColor}\n\t\t\t\tonChangeHeight={this.toggleHeight}\n\t\t\t\tonChangeWidth={this.toggleWidth}\n\t\t\t\tonChangeCorners={this.toggleCorners}\n\t\t\t/>\n\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}