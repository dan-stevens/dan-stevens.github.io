{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nimport { Crane } from './crane';\nimport './gizmo.css';\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gizmoCount: 0,\n      gizmoArray: [],\n      animationQueue: [],\n      animationQueuePriority: 1,\n      currentAnimation: []\n    };\n\n    this.createGizmo = () => {\n      this.setState({\n        gizmoCount: this.state.gizmoCount + 1,\n        gizmoArray: [...this.state.gizmoArray, React.createElement(Gizmo, {\n          key: this.state.gizmoCount,\n          number: this.state.gizmoCount,\n          onFilterOut: this.convertMonster,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        })]\n      });\n    };\n\n    this.convertMonster = this.convertMonster.bind(this);\n    this.removeMonster = this.removeMonster.bind(this);\n  }\n\n  convertMonster(monsterNumber, monsterOffsetTop) {\n    console.log('monsterNumber: ' + monsterNumber);\n    console.log('monsterOffsetTop: ' + monsterOffsetTop);\n    this.setState({\n      animationQueue: [{\n        animationName: 'craneToPickup',\n        animationSequence: craneToPickup,\n        priority: 1\n      }, {\n        animationName: 'craneClawLower',\n        animationSequence: craneClawLower,\n        priority: 2,\n        monsterOffsetTop: monsterOffsetTop\n      }, {\n        animationName: 'craneClawPickup',\n        animationSequence: craneClawPickup,\n        priority: 3\n      }, {\n        animationName: 'monsterPickup',\n        animationSequence: monsterPickup,\n        priority: 3,\n        monsterNumber: monsterNumber,\n        monsterOffsetTop: monsterOffsetTop\n      }, {\n        animationName: 'craneToDrop',\n        animationSequence: craneToDrop,\n        priority: 4,\n        monsterNumber: monsterNumber,\n        monsterOffsetTop: monsterOffsetTop\n      }, {\n        animationName: 'monsterToDrop',\n        animationSequence: monsterToDrop,\n        priority: 4,\n        monsterNumber: monsterNumber,\n        monsterOffsetTop: monsterOffsetTop\n      }, {\n        animationName: 'craneClawDrop',\n        animationSequence: craneClawDrop,\n        priority: 5\n      }, {\n        animationName: 'monsterSpin',\n        animationSequence: monsterSpin,\n        priority: 6,\n        monsterNumber: monsterNumber\n      }, {\n        animationName: 'monsterDrop',\n        animationSequence: monsterDrop,\n        priority: 6,\n        monsterNumber: monsterNumber,\n        monsterRemove: true\n      }, {\n        animationName: 'craneReset',\n        animationSequence: craneReset,\n        priority: 7\n      }],\n      currentAnimation: []\n    });\n  }\n\n  removeMonster(monsterNumber) {\n    this.setState({\n      gizmoArray: this.state.gizmoArray.filter(function (item) {\n        return item.props.number !== monsterNumber;\n      })\n    });\n  } //current animation's done\n\n\n  currentAnimationFinished(animate) {\n    this.setState({\n      animationQueue: this.state.animationQueue.filter(function (item) {\n        return item.animationName !== animation;\n      }),\n      currentAnimation: this.state.currentAnimation.filter(function (item) {\n        return item.animationName !== animation;\n      })\n    }); //Unmount this component\n\n    if (true) {\n      console.log;\n    } //Reset animation queue priority\n\n\n    if (this.state.animationQueue.length === 0) {\n      this.setState({\n        animationQueuePriority: 0\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //We have an updated animation queue\n    if (prevState.animationQueue !== this.state.animationQueue && this.state.currentAnimation.length === 0) {\n      let currentPriority = this.state.animationQueuePriority;\n      let sendToCurrentAnimation = [];\n      this.state.animationQueue.forEach(function (animation, index) {\n        if (animation.priority === currentPriority) {\n          sendToCurrentAnimation.push(animation);\n        }\n      });\n      currentPriority++;\n      this.setState({\n        currentAnimation: sendToCurrentAnimation,\n        animationQueuePriority: currentPriority\n      });\n    } //We have current animation(s)\n\n\n    if (prevState.currentAnimation !== this.state.currentAnimation && this.state.currentAnimation.length !== 0) {\n      this.state.currentAnimation.forEach(function (animate, index) {\n        animate.animationSequence(animate).then(resolve => this.currentAnimationFinished(resolve));\n      }, this);\n    } //We're at this components last animation\n\n\n    if (prevState.currentAnimation !== this.state.currentAnimation && this.state.currentAnimation.length == 0) {\n      console.log(this.state.gizmoArray);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gizmos-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Crane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"gizmo-button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(GizmoButton, {\n      onClick: this.createGizmo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"gizmo-creater\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, this.state.gizmoArray), React.createElement(\"section\", {\n      className: \"gizmo-converter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"need to design a converter\")), React.createElement(\"section\", {\n      className: \"gizmo-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"need to design a gizmo result\")));\n  }\n\n}\n\nconst craneToPickup = animate => {\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate.animationName, element, 'margin-left', '38%');\n};\n\nconst craneClawLower = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate.animationName, element, 'top', animate.monsterOffsetTop + 'px');\n};\n\nconst craneClawPickup = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate.animationName, element, 'top', 0);\n};\n\nconst monsterPickup = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate.animationName, element, 'top', -animate.monsterOffsetTop + 'px');\n};\n\nconst craneToDrop = animate => {\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate.animationName, element, 'margin-left', '70.5%');\n};\n\nconst monsterToDrop = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate.animationName, element, 'left', '50%');\n};\n\nconst craneClawDrop = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate.animationName, element, 'background-color', 'red');\n};\n\nconst monsterDrop = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate.animationName, element, 'top', '100px');\n};\n\nconst monsterSpin = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate.animationName, element, 'transform', 'rotate(180deg)');\n};\n\nconst craneReset = animate => {\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate.animationName, element, 'margin-left', 'calc(-25% - 5px)');\n};\n\nconst e = () => {\n  setTimeout(function () {\n    alert('E');\n    return 'done';\n  }, 2000);\n};\n\nconst f = () => {\n  setTimeout(function () {\n    alert('F');\n  }, 2000);\n};\n\nconst g = () => {\n  setTimeout(function () {\n    alert('G');\n  }, 2000);\n};\n\nconst cssTransitionToPromise = (animate, element, property, value) => {\n  return new Promise(resolve => {\n    element.style[property] = value;\n\n    const transitionEnded = e => {\n      if (e.propertyName !== property) {\n        console.log(e.propertyName);\n        return; //Wrong transition\n      } else {\n        element.removeEventListener('transitionend', transitionEnded);\n        resolve(animate);\n      }\n    };\n\n    element.addEventListener('transitionend', transitionEnded);\n  });\n};\n\nclass GizmoButton extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Make a Gizmo\");\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js"],"names":["React","Gizmo","Crane","GizmoSection","Component","constructor","props","state","gizmoCount","gizmoArray","animationQueue","animationQueuePriority","currentAnimation","createGizmo","setState","convertMonster","bind","removeMonster","monsterNumber","monsterOffsetTop","console","log","animationName","animationSequence","craneToPickup","priority","craneClawLower","craneClawPickup","monsterPickup","craneToDrop","monsterToDrop","craneClawDrop","monsterSpin","monsterDrop","monsterRemove","craneReset","filter","item","number","currentAnimationFinished","animate","animation","length","componentDidUpdate","prevProps","prevState","currentPriority","sendToCurrentAnimation","forEach","index","push","then","resolve","render","element","document","getElementById","cssTransitionToPromise","e","setTimeout","alert","f","g","property","value","Promise","style","transitionEnded","propertyName","removeEventListener","addEventListener","GizmoButton","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\nimport {Crane} from './crane';\nimport './gizmo.css';\n\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.convertMonster = this.convertMonster.bind(this);\n\tthis.removeMonster = this.removeMonster.bind(this);\n  }\n  state = {\n    gizmoCount : 0,\n    gizmoArray : [],\n    animationQueue: [],\n    animationQueuePriority: 1,\n    currentAnimation: []\n  }\n\n\tcreateGizmo = () => {\n\t\tthis.setState({\n\t\t\tgizmoCount : this.state.gizmoCount + 1,\n\t\t\tgizmoArray: [...this.state.gizmoArray, <Gizmo key={this.state.gizmoCount} number={this.state.gizmoCount} onFilterOut={this.convertMonster} />]\t\t\t\n\t\t});\n\t}\n\n\tconvertMonster(monsterNumber, monsterOffsetTop) {\n\t\tconsole.log('monsterNumber: ' + monsterNumber);\n\t\tconsole.log('monsterOffsetTop: ' + monsterOffsetTop);\n\t\tthis.setState({\n\t\t\tanimationQueue: [\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneToPickup',\n\t\t\t  \tanimationSequence: craneToPickup,\n\t\t\t  \tpriority: 1\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneClawLower',\n\t\t\t  \tanimationSequence: craneClawLower,\n\t\t\t  \tpriority: 2,\n\t\t\t  \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneClawPickup',\n\t\t\t  \tanimationSequence: craneClawPickup,\n\t\t\t  \tpriority: 3\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'monsterPickup',\n\t\t\t  \tanimationSequence: monsterPickup,\n\t\t\t  \tpriority: 3,\n\t\t\t  \tmonsterNumber: monsterNumber,\n\t\t\t  \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneToDrop',\n\t\t\t  \tanimationSequence: craneToDrop,\n\t\t\t  \tpriority: 4,\n\t\t\t  \tmonsterNumber: monsterNumber,\n\t\t\t  \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'monsterToDrop',\n\t\t\t  \tanimationSequence: monsterToDrop,\n\t\t\t  \tpriority: 4,\n\t\t\t  \tmonsterNumber: monsterNumber,\n\t\t\t  \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneClawDrop',\n\t\t\t  \tanimationSequence: craneClawDrop,\n\t\t\t  \tpriority: 5\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'monsterSpin',\n\t\t\t  \tanimationSequence: monsterSpin,\n\t\t\t  \tpriority: 6,\n\t\t\t  \tmonsterNumber: monsterNumber\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'monsterDrop',\n\t\t\t  \tanimationSequence: monsterDrop,\n\t\t\t  \tpriority: 6,\n\t\t\t  \tmonsterNumber: monsterNumber,\n\t\t\t  \tmonsterRemove: true\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneReset',\n\t\t\t  \tanimationSequence: craneReset,\n\t\t\t  \tpriority: 7\n\t\t\t  }\n\t\t\t],\n\t\t\tcurrentAnimation: []\n\t\t});\n\t}\n\n\tremoveMonster(monsterNumber) {\n\t\tthis.setState({\n\t\t\tgizmoArray : this.state.gizmoArray.filter(function(item) {\n\t\t\t\treturn item.props.number !== monsterNumber\n\t\t\t})\n\t\t});\n\t}\n\n\t//current animation's done\n\tcurrentAnimationFinished(animate) {\n\t\tthis.setState({\n\t\t\tanimationQueue: this.state.animationQueue.filter(function(item) {\n\t\t\t\treturn item.animationName !== animation\n\t\t\t}),\n\t\t\tcurrentAnimation : this.state.currentAnimation.filter(function(item) {\n\t\t\t\treturn item.animationName !== animation\n\t\t\t})\n\t\t});\n\n\t\t//Unmount this component\n\t\tif (true) {\n\t\t\tconsole.log\n\t\t}\n\n\t\t//Reset animation queue priority\n\t\tif (this.state.animationQueue.length === 0) {\n\t\t\tthis.setState({\n\t\t\t\tanimationQueuePriority: 0\n\t\t\t})\t\t\t\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t\n\t\t//We have an updated animation queue\n\t\tif (prevState.animationQueue !== this.state.animationQueue && this.state.currentAnimation.length === 0) {\n\t\t\tlet currentPriority = this.state.animationQueuePriority;\n\t\t\tlet sendToCurrentAnimation = [];\n\n\t\t\tthis.state.animationQueue.forEach(function(animation, index) { \n\t\t\t\tif (animation.priority === currentPriority) {\n\t\t\t\t\tsendToCurrentAnimation.push(animation);\n\t\t\t\t}\t\t\t\t\n\t\t\t});\n\t\t\tcurrentPriority++\n\n\t\t\tthis.setState({\n\t\t\t  currentAnimation: sendToCurrentAnimation,\n\t\t\t  animationQueuePriority: currentPriority\t\t  \n\t\t\t});\n\t\t}\t\t\n\n\t\t//We have current animation(s)\n\t\tif (prevState.currentAnimation !== this.state.currentAnimation && this.state.currentAnimation.length !== 0) {\n\t\t\t\tthis.state.currentAnimation.forEach(function(animate, index) {\n\t\t\t\t\tanimate.animationSequence(animate).then((resolve) => this.currentAnimationFinished(resolve));\n\t\t\t\t}, this);\n\t\t\t}\n\n\n\t\t//We're at this components last animation\n\t\tif (prevState.currentAnimation !== this.state.currentAnimation && this.state.currentAnimation.length == 0) {\n\t\t\tconsole.log(this.state.gizmoArray);\n\t\t}\n\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t  <div className='gizmos-container'>\n\t\t  \t<Crane />\n\t\t    <section className=\"gizmo-button-container\">\n\t\t      <GizmoButton onClick={this.createGizmo} />\n\t\t    </section>\n\t\t\t  <section className=\"gizmo-creater\">\n\t\t\t\t{this.state.gizmoArray}\n\t\t\t</section>\n            <section className=\"gizmo-converter\">\n             <p>need to design a converter</p>\n            </section>\n            <section className=\"gizmo-result\">\n             <p>need to design a gizmo result</p>\n            </section>\n\t      </div>\n\t\t)\n\t}\n}\n\n\nconst craneToPickup = (animate) => {\n  const element = document.getElementById('crane');\n  return (cssTransitionToPromise(animate.animationName, element, 'margin-left', '38%'))\n}\n\nconst craneClawLower = (animate) => {\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate.animationName, element, 'top', animate.monsterOffsetTop + 'px'))\n}\n\nconst craneClawPickup = (animate) => {\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate.animationName, element, 'top', 0))\n}\n\nconst monsterPickup = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate.animationName, element, 'top', - animate.monsterOffsetTop + 'px'))\n}\n\nconst craneToDrop = (animate) => {\n\tconst element = document.getElementById('crane');\n   return (cssTransitionToPromise(animate.animationName, element, 'margin-left', '70.5%'))\n}\n\nconst monsterToDrop = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate.animationName, element, 'left', '50%'))\n}\n\nconst craneClawDrop = (animate) => {\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate.animationName, element, 'background-color', 'red'))\n}\n\nconst monsterDrop = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate.animationName, element, 'top', '100px'))\n}\n\nconst monsterSpin = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate.animationName, element, 'transform', 'rotate(180deg)'))\n}\n\nconst craneReset = (animate) => {\n  const element = document.getElementById('crane');\n  return (cssTransitionToPromise(animate.animationName, element, 'margin-left', 'calc(-25% - 5px)'))\n}\n\nconst e = () => {\n\tsetTimeout(function() {\n\t\talert('E');\n\t\treturn('done')\n\t}, 2000);\n}\n\nconst f = () => {\n  setTimeout(function() {\n\t\talert('F');\n\t}, 2000);\n}\n\nconst g = () => {\n  setTimeout(function() {\n\t\talert('G');\n\t}, 2000);\n}\n\nconst cssTransitionToPromise = (animate, element, property, value) => {\nreturn (\n\t  new Promise(resolve => {\n      element.style[property] = value;\n      const transitionEnded = e => {\n      if (e.propertyName !== property) {\n        console.log(e.propertyName);\n    \treturn; //Wrong transition\n      }\n      else { \n    \telement.removeEventListener('transitionend', transitionEnded);\n  \t    resolve(animate);\n      }\n    }\n    element.addEventListener('transitionend', transitionEnded);\n    })\n  )\n}\n\nclass GizmoButton extends React.Component {\n  render() {\n    \n    return (\n      <button onClick={this.props.onClick}>Make a Gizmo</button>\n    ) \n\n  }\n}"]},"metadata":{},"sourceType":"module"}