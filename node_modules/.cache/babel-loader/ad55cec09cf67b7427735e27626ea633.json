{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nimport { Crane } from './crane';\nimport './gizmo.css';\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gizmoCount: 0,\n      gizmoArray: [],\n      animationQueue: [],\n      animationQueuePriority: 0,\n      currentAnimation: []\n    };\n\n    this.createGizmo = () => {\n      this.setState({\n        gizmoCount: this.state.gizmoCount + 1,\n        gizmoArray: [...this.state.gizmoArray, React.createElement(Gizmo, {\n          key: this.state.gizmoCount,\n          number: this.state.gizmoCount,\n          onFilterOut: this.convertMonster,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        })]\n      });\n    };\n\n    this.convertMonster = this.convertMonster.bind(this);\n    this.removeMonster = this.removeMonster.bind(this);\n  }\n\n  convertMonster(monsterNumber, monsterOffsetTop) {\n    this.setState({\n      animationQueue: [{\n        animationName: 'craneToPickup',\n        animationSequence: craneToPickup,\n        priority: 1\n      }, {\n        animationName: 'craneClawLower',\n        animationSequence: craneClawLower,\n        priority: 1,\n        monsterOffsetTop: monsterOffsetTop\n      }],\n      currentAnimation: []\n    });\n  }\n\n  removeMonster(monsterNumber) {\n    this.setState({\n      gizmoArray: this.state.gizmoArray.filter(function (item) {\n        return item.props.number !== monsterNumber;\n      })\n    });\n  } //current animation's done\n\n\n  currentAnimationFinished(animate) {\n    console.log('3: Im done running: ' + animate.animationName + ', heres the current priority count: ' + this.state.animationQueuePriority);\n    this.setState({\n      animationQueue: this.state.animationQueue.filter(function (item) {\n        console.log('setting state here...');\n        return item !== animate;\n      }),\n      currentAnimation: this.state.currentAnimation.filter(function (item) {\n        console.log('setting state here too...');\n        console.log(JSON.stringify(this.state.currentAnimation));\n        return item !== animate;\n      })\n    });\n\n    if (this.state.currentAnimation.length === 0) {\n      console.log('No current animation');\n    } //Unmount this component\n\n\n    if (animate.monsterRemove) {} //console.log('this animate has an end component: ' + animate.monsterNumber);\n    //Reset animation queue priority\n\n\n    if (this.state.animationQueue.length === 0) {\n      console.log('im being hit too?');\n      this.setState({\n        animationQueuePriority: 0\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //We have an updated animation queue\n    if (prevState.animationQueue !== this.state.animationQueue && this.state.animationQueue.length !== 0 && this.state.currentAnimation.length === 0) {\n      let animationPriority = this.state.animationQueuePriority;\n      console.log('\"Start\", Updated Animation Queue and heres the current animationQueuePriority: ' + this.state.animationQueuePriority);\n      console.log('We can safely up the priority from: ' + this.state.animationQueuePriority);\n      animationPriority++;\n      console.log('To: ' + animationPriority);\n      let sendToCurrentAnimation = [];\n      this.state.animationQueue.forEach(function (animation, index) {\n        if (animation.priority === animationPriority) {\n          console.log('This is being added to currentAnimation: ' + animation.animationName);\n          sendToCurrentAnimation.push(animation);\n        }\n      }, this);\n      this.setState({\n        currentAnimation: sendToCurrentAnimation,\n        animationQueuePriority: animationPriority\n      });\n    } //We have current animation(s)\n\n\n    if (prevState.currentAnimation !== this.state.currentAnimation && this.state.currentAnimation.length !== 0) {\n      console.log('aha ha and duh'); // this.state.currentAnimation.forEach(function(animate, index) {\n      // \tconsole.log('for each current animation is happening here: ' + animate.animationName + ' index ' + index);\n      // \tanimate.animationSequence(animate).then((resolve) => this.currentAnimationFinished(resolve));\t\t\t\n      // }, this);\n      // this.state.currentAnimation.forEach(function(animate, index) {\n      // \tconsole.log('for each current animation is happening here: ' + animate.animationName + ' index ' + index);\n      // \tanimate.animationSequence(animate).then((resolve) => this.currentAnimationFinished(resolve));\t\t\t\n      // }, this);\n\n      for (let i = 0; i < this.state.currentAnimation.length; i++) {\n        console.log('New! \"for\" current animation is happening here: ' + this.state.currentAnimation[i].animationName + ' index ' + i);\n        this.state.currentAnimation[i].animationSequence(this.state.currentAnimation[i]).then(resolve => this.currentAnimationFinished(resolve));\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gizmos-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Crane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"gizmo-button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(GizmoButton, {\n      onClick: this.createGizmo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"gizmo-creater\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.state.gizmoArray), React.createElement(\"section\", {\n      className: \"gizmo-converter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"need to design a converter\")), React.createElement(\"section\", {\n      className: \"gizmo-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"need to design a gizmo result\")));\n  }\n\n}\n\nconst craneToPickup = animate => {\n  console.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate, element, 'margin-left', '38%');\n};\n\nconst craneClawLower = animate => {\n  console.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'top', animate.monsterOffsetTop + 'px');\n};\n\nconst craneClawPickup = animate => {\n  console.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'top', 0);\n};\n\nconst monsterPickup = animate => {\n  console.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'top', -animate.monsterOffsetTop + 'px');\n};\n\nconst craneToDrop = animate => {\n  console.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate, element, 'margin-left', '70.5%');\n};\n\nconst monsterToDrop = animate => {\n  console.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'left', '50%');\n};\n\nconst craneClawDrop = animate => {\n  console.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'background-color', 'red');\n};\n\nconst monsterDrop = animate => {\n  console.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'top', '100px');\n};\n\nconst monsterSpin = animate => {\n  console.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'transform', 'rotate(180deg)');\n};\n\nconst craneReset = animate => {\n  console.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate, element, 'margin-left', 'calc(-25% - 5px)');\n};\n\nconst cssTransitionToPromise = (animate, element, property, value) => {\n  return new Promise(resolve => {\n    element.style[property] = value;\n\n    const transitionEnded = e => {\n      if (e.propertyName !== property) {\n        return; //Wrong transition\n      } else {\n        element.removeEventListener('transitionend', transitionEnded);\n        resolve(animate);\n      }\n    };\n\n    element.addEventListener('transitionend', transitionEnded);\n  });\n};\n\nclass GizmoButton extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Make a Gizmo\");\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js"],"names":["React","Gizmo","Crane","GizmoSection","Component","constructor","props","state","gizmoCount","gizmoArray","animationQueue","animationQueuePriority","currentAnimation","createGizmo","setState","convertMonster","bind","removeMonster","monsterNumber","monsterOffsetTop","animationName","animationSequence","craneToPickup","priority","craneClawLower","filter","item","number","currentAnimationFinished","animate","console","log","JSON","stringify","length","monsterRemove","componentDidUpdate","prevProps","prevState","animationPriority","sendToCurrentAnimation","forEach","animation","index","push","i","then","resolve","render","element","document","getElementById","cssTransitionToPromise","craneClawPickup","monsterPickup","craneToDrop","monsterToDrop","craneClawDrop","monsterDrop","monsterSpin","craneReset","property","value","Promise","style","transitionEnded","e","propertyName","removeEventListener","addEventListener","GizmoButton","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\nimport {Crane} from './crane';\nimport './gizmo.css';\n\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.convertMonster = this.convertMonster.bind(this);\n\tthis.removeMonster = this.removeMonster.bind(this);\n  }\n  state = {\n    gizmoCount : 0,\n    gizmoArray : [],\n    animationQueue: [],\n    animationQueuePriority: 0,\n    currentAnimation: []\n  }\n\n\tcreateGizmo = () => {\n\t\tthis.setState({\n\t\t\tgizmoCount : this.state.gizmoCount + 1,\n\t\t\tgizmoArray: [...this.state.gizmoArray, <Gizmo key={this.state.gizmoCount} number={this.state.gizmoCount} onFilterOut={this.convertMonster} />]\t\t\t\n\t\t});\n\t}\n\n\tconvertMonster(monsterNumber, monsterOffsetTop) {\n\t\tthis.setState({\n\t\t\tanimationQueue: [\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneToPickup',\n\t\t\t  \tanimationSequence: craneToPickup,\n\t\t\t  \tpriority: 1\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneClawLower',\n\t\t\t  \tanimationSequence: craneClawLower,\n\t\t\t  \tpriority: 1,\n\t\t\t  \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  },\n\t\t\t  // {\n\t\t\t  // \tanimationName: 'craneClawPickup',\n\t\t\t  // \tanimationSequence: craneClawPickup,\n\t\t\t  // \tpriority: 2\n\t\t\t  // },\n\t\t\t  // {\n\t\t\t  // \tanimationName: 'monsterPickup',\n\t\t\t  // \tanimationSequence: monsterPickup,\n\t\t\t  // \tpriority: 3,\n\t\t\t  // \tmonsterNumber: monsterNumber,\n\t\t\t  // \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  // }//,\n\t\t\t  // {\n\t\t\t  // \tanimationName: 'craneToDrop',\n\t\t\t  // \tanimationSequence: craneToDrop,\n\t\t\t  // \tpriority: 4,\n\t\t\t  // \tmonsterNumber: monsterNumber,\n\t\t\t  // \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  // },\n\t\t\t  // {\n\t\t\t  // \tanimationName: 'monsterToDrop',\n\t\t\t  // \tanimationSequence: monsterToDrop,\n\t\t\t  // \tpriority: 4,\n\t\t\t  // \tmonsterNumber: monsterNumber,\n\t\t\t  // \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  // },\n\t\t\t  // {\n\t\t\t  // \tanimationName: 'craneClawDrop',\n\t\t\t  // \tanimationSequence: craneClawDrop,\n\t\t\t  // \tpriority: 5\n\t\t\t  // },\n\t\t\t  // {\n\t\t\t  // \tanimationName: 'monsterSpin',\n\t\t\t  // \tanimationSequence: monsterSpin,\n\t\t\t  // \tpriority: 6,\n\t\t\t  // \tmonsterNumber: monsterNumber\n\t\t\t  // },\n\t\t\t  // {\n\t\t\t  // \tanimationName: 'monsterDrop',\n\t\t\t  // \tanimationSequence: monsterDrop,\n\t\t\t  // \tpriority: 7,\n\t\t\t  // \tmonsterNumber: monsterNumber,\n\t\t\t  // \tmonsterRemove: true\n\t\t\t  // },\n\t\t\t  // {\n\t\t\t  // \tanimationName: 'craneReset',\n\t\t\t  // \tanimationSequence: craneReset,\n\t\t\t  // \tpriority: 8\n\t\t\t  // }\n\t\t\t],\n\t\t\tcurrentAnimation: []\n\t\t});\n\t}\n\n\tremoveMonster(monsterNumber) {\n\t\tthis.setState({\n\t\t\tgizmoArray : this.state.gizmoArray.filter(function(item) {\n\t\t\t\treturn item.props.number !== monsterNumber\n\t\t\t})\n\t\t});\n\t}\n\n\t//current animation's done\n\tcurrentAnimationFinished(animate) {\n\t\tconsole.log('3: Im done running: ' + animate.animationName + ', heres the current priority count: ' + this.state.animationQueuePriority );\n\t\t\n\n\t\tthis.setState({\t\n\n\t\t\tanimationQueue: this.state.animationQueue.filter(function(item) {\n\t\t\t\tconsole.log('setting state here...');\n\t\t\t\treturn item !== animate\n\t\t\t}),\n\t\t\tcurrentAnimation: this.state.currentAnimation.filter(function(item) {\n\t\t\t\tconsole.log('setting state here too...');\n\t\t\t\tconsole.log(JSON.stringify(this.state.currentAnimation));\n\t\t\t\treturn item !== animate\n\t\t\t}),\n\t\t});\n\n\t\tif (this.state.currentAnimation.length === 0) {\n\t\t\tconsole.log('No current animation');\n\t\t\t\n\t\t}\n\n\t\t//Unmount this component\n\t\tif (animate.monsterRemove) {\n\t\t\t//console.log('this animate has an end component: ' + animate.monsterNumber);\n\t\t}\n\n\t\t//Reset animation queue priority\n\t\tif (this.state.animationQueue.length === 0) {\n\t\t\tconsole.log('im being hit too?');\n\t\t\tthis.setState({\n\t\t\t\tanimationQueuePriority: 0\n\t\t\t})\t\t\t\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t//We have an updated animation queue\n\t\tif ((prevState.animationQueue !== this.state.animationQueue \n\t\t\t&& this.state.animationQueue.length !== 0\n\t\t\t&& this.state.currentAnimation.length === 0\n\t\t)) {\n\n\t\t\tlet animationPriority = this.state.animationQueuePriority;\n\n\t\t\tconsole.log('\"Start\", Updated Animation Queue and heres the current animationQueuePriority: ' + this.state.animationQueuePriority);\n\t\t\tconsole.log('We can safely up the priority from: ' + this.state.animationQueuePriority);\n\t\t\t\n\t\t\tanimationPriority++;\n\n\t\t\tconsole.log('To: ' + animationPriority);\n\n\t\t\tlet sendToCurrentAnimation = [];\n\t\t\tthis.state.animationQueue.forEach(function(animation, index) { \n\t\t\t\tif (animation.priority === animationPriority) {\n\t\t\t\t\tconsole.log('This is being added to currentAnimation: ' + animation.animationName);\n\t\t\t\t\tsendToCurrentAnimation.push(animation);\n\t\t\t\t}\t\t\t\t\n\t\t\t}, this);\n\n\t\t\tthis.setState({\n\t\t\t  currentAnimation: sendToCurrentAnimation,\t\n\t\t\t  animationQueuePriority: animationPriority  \n\t\t\t});\n\t\t}\t\t\n\n\t\t//We have current animation(s)\n\t\tif (prevState.currentAnimation !== this.state.currentAnimation && this.state.currentAnimation.length !== 0) {\t\n\t\tconsole.log('aha ha and duh');\t\t\t\n\t\t\t\t// this.state.currentAnimation.forEach(function(animate, index) {\n\t\t\t\t// \tconsole.log('for each current animation is happening here: ' + animate.animationName + ' index ' + index);\n\t\t\t\t// \tanimate.animationSequence(animate).then((resolve) => this.currentAnimationFinished(resolve));\t\t\t\n\t\t\t\t// }, this);\n\t\t\t\n\n\n\t\t\t\t// this.state.currentAnimation.forEach(function(animate, index) {\n\t\t\t\t// \tconsole.log('for each current animation is happening here: ' + animate.animationName + ' index ' + index);\n\t\t\t\t// \tanimate.animationSequence(animate).then((resolve) => this.currentAnimationFinished(resolve));\t\t\t\n\t\t\t\t// }, this);\n\t\t\tfor(let i = 0; i < this.state.currentAnimation.length; i++){\n\n\t\t\t\tconsole.log('New! \"for\" current animation is happening here: ' + this.state.currentAnimation[i].animationName + ' index ' + i);\n\t\t\t\tthis.state.currentAnimation[i].animationSequence(this.state.currentAnimation[i]).then((resolve) => this.currentAnimationFinished(resolve));\t\t\t\n\n\t\t\t\t\n\t}\n\t\t}\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t  <div className='gizmos-container'>\n\t\t  \t<Crane />\n\t\t    <section className=\"gizmo-button-container\">\n\t\t      <GizmoButton onClick={this.createGizmo} />\n\t\t    </section>\n\t\t\t  <section className=\"gizmo-creater\">\n\t\t\t\t{this.state.gizmoArray}\n\t\t\t</section>\n            <section className=\"gizmo-converter\">\n             <p>need to design a converter</p>\n            </section>\n            <section className=\"gizmo-result\">\n             <p>need to design a gizmo result</p>\n            </section>\n\t      </div>\n\t\t)\n\t}\n}\n\n\nconst craneToPickup = (animate) => {\n\tconsole.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('crane');\n  return (cssTransitionToPromise(animate, element, 'margin-left', '38%'))\n}\n\nconst craneClawLower = (animate) => {\n\t\tconsole.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'top', animate.monsterOffsetTop + 'px'))\n}\n\nconst craneClawPickup = (animate) => {\n\t\tconsole.log('Ive been called: ' + animate.animationName);\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'top', 0))\n}\n\nconst monsterPickup = (animate) => {\n\t\tconsole.log('Ive been called: ' + animate.animationName);\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'top', - animate.monsterOffsetTop + 'px'))\n}\n\nconst craneToDrop = (animate) => {\n\t\tconsole.log('Ive been called: ' + animate.animationName);\n\tconst element = document.getElementById('crane');\n   return (cssTransitionToPromise(animate, element, 'margin-left', '70.5%'))\n}\n\nconst monsterToDrop = (animate) => {\n\t\tconsole.log('Ive been called: ' + animate.animationName);\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'left', '50%'))\n}\n\nconst craneClawDrop = (animate) => {\n\t\tconsole.log('Ive been called: ' + animate.animationName);\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'background-color', 'red'))\n}\n\nconst monsterDrop = (animate) => {\n\t\tconsole.log('Ive been called: ' + animate.animationName);\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'top', '100px'))\n}\n\nconst monsterSpin = (animate) => {\n\t\tconsole.log('Ive been called: ' + animate.animationName);\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'transform', 'rotate(180deg)'))\n}\n\nconst craneReset = (animate) => {\n\t\tconsole.log('Ive been called: ' + animate.animationName);\n  const element = document.getElementById('crane');\n  return (cssTransitionToPromise(animate, element, 'margin-left', 'calc(-25% - 5px)'))\n}\n\nconst cssTransitionToPromise = (animate, element, property, value) => {\nreturn (\n\t  new Promise(resolve => {\n      element.style[property] = value;\n      const transitionEnded = e => {\n      if (e.propertyName !== property) {\n    \treturn; //Wrong transition\n      }\n      else { \n    \telement.removeEventListener('transitionend', transitionEnded);\n  \t    resolve(animate);\n      }\n    }\n    element.addEventListener('transitionend', transitionEnded);\n    })\n  )\n}\n\nclass GizmoButton extends React.Component {\n  render() {\n    \n    return (\n      <button onClick={this.props.onClick}>Make a Gizmo</button>\n    ) \n\n  }\n}"]},"metadata":{},"sourceType":"module"}