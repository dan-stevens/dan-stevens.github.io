{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/floatingMonster.js\";\nimport React from 'react';\nexport class FloatingMonster extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      floating: false,\n      color: this.props.color\n    };\n    this.boo = this.boo.bind(this);\n    this.floatingMonsterRef = React.createRef();\n  }\n\n  boo(floatingMonster) {\n    console.log('boo' + floatingMonster);\n    let viewport = ['top', 'right', 'bottom', 'left'];\n    let side = viewport[Math.floor(Math.random() * viewport.length)];\n    console.log(side); //Pick a location on that side\n\n    let sideLocation = Math.random() * 100 + '%';\n    console.log(sideLocation); //Animate it\n\n    console.log(floatingMonster);\n\n    switch (side) {\n      case 'top':\n        window.setTimeout(function () {\n          floatingMonster.style['left'] = sideLocation;\n          floatingMonster.className += ' floating-monster-top';\n        }, 50);\n        break;\n\n      case 'right':\n        window.setTimeout(function () {\n          floatingMonster.style['top'] = sideLocation;\n          floatingMonster.className += ' floating-monster-right';\n        }, 50);\n        break;\n\n      case 'bottom':\n        window.setTimeout(function () {\n          floatingMonster.style['left'] = sideLocation;\n          floatingMonster.className += ' floating-monster-bottom';\n        }, 50);\n        break;\n\n      case 'left':\n        window.setTimeout(function () {\n          floatingMonster.style['top'] = sideLocation;\n          floatingMonster.className += ' floating-monster-left';\n        }, 50);\n        break;\n\n      default:\n        return;\n    }\n\n    this.setState({\n      floating: true\n    });\n  }\n\n  componentDidMount() {\n    // this.setState({\n    // \tfloating: true\n    // })\n    this.floatingMonsterRef.current.addEventListener('animationend', () => {\n      animationEnd;\n    });\n  }\n\n  componentDidUpdate() {\n    console.log('update');\n    let floatingMonster = this.floatingMonsterRef.current;\n    floatingMonster.addEventListener('animationend', () => {\n      animationEnd;\n    }); //this.floatingMonsterRef.current.addEventListener('animationend', function() { animationEnd(that)}); //this.animationEnd(this.floatingMonsterRef.current)\n\n    (function loop() {\n      var rand = Math.round(Math.random() * (3000 - 500)) + 5000;\n      let floatingMonsterTimer = setTimeout(() => {\n        console.log('timout up');\n        this.boo(this.floatingMonsterRef.current); //Need to send this floating monster\n      }, rand);\n    }).bind(this)();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: this.props.id,\n      className: \"floating-monster \".concat(this.props.species),\n      ref: this.floatingMonsterRef,\n      style: {\n        backgroundColor: this.state.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"torso\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"left-arm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"right-arm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst transitionEnded = e => {\n  if (e.propertyName !== property) {\n    return; //Wrong transition\n  } else {\n    element.removeEventListener('transitionend', transitionEnded);\n    resolve(animate);\n  }\n};\n\nelement.addEventListener('transitionend', transitionEnded); //const animationEnd = () => {\n//floatingMonster.removeEventListener('animationend', () => {animationEnd});\n// const animationEnd = () => {\n// \tfloatingMonster = Document.getElementById('');      \n//     floatingMonster.removeEventListener('animationend', () => {animationEnd});\n//  })\n// console.log('here');\n// floatingMonster.removeEventListener('animationend', () => {animationEnd(floatingMonster)});\n// const that = floatingMonster;\n// floatingMonster.className = 'floating-monster';\n// floatingMonster.style.removeProperty('top','right','bottom','left');\n// floatingMonster.removeEventListener('animationend', function() { animationEnd(that)});\n//}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/floatingMonster.js"],"names":["React","FloatingMonster","Component","constructor","props","state","floating","color","boo","bind","floatingMonsterRef","createRef","floatingMonster","console","log","viewport","side","Math","floor","random","length","sideLocation","window","setTimeout","style","className","setState","componentDidMount","current","addEventListener","animationEnd","componentDidUpdate","loop","rand","round","floatingMonsterTimer","render","id","species","backgroundColor","transitionEnded","e","propertyName","property","element","removeEventListener","resolve","animate"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nexport class FloatingMonster extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfloating: false,\n\t\t\tcolor: this.props.color\n\t\t}\n\t\tthis.boo = this.boo.bind(this);\n\t\tthis.floatingMonsterRef = React.createRef();\n\t}\n\n\nboo(floatingMonster) {\n\tconsole.log('boo' + floatingMonster);\n  let viewport = ['top', 'right', 'bottom', 'left'];\n  let side = viewport[Math.floor(Math.random() * viewport.length)];\n  console.log(side);\n\n  //Pick a location on that side\n  let sideLocation = Math.random() * 100 + '%';\n  console.log(sideLocation);\n  \n  //Animate it\n  console.log(floatingMonster);\n  switch(side) {\n\tcase 'top': \n\twindow.setTimeout( function() {\n      floatingMonster.style['left'] = sideLocation;\n\t  floatingMonster.className += ' floating-monster-top';\n\t  }, 50);\n\tbreak;\n\n\tcase 'right':\n\twindow.setTimeout( function() {\n      floatingMonster.style['top'] = sideLocation;\n\t  floatingMonster.className += ' floating-monster-right';  \n\t  }, 50);\n\tbreak;\n\n\tcase 'bottom':\n\twindow.setTimeout( function() {\n\t  floatingMonster.style['left'] = sideLocation;\n      floatingMonster.className += ' floating-monster-bottom';\n      }, 50);\n\tbreak;\n\n\tcase 'left':\n\twindow.setTimeout( function() {\n\t  floatingMonster.style['top'] = sideLocation;\n      floatingMonster.className += ' floating-monster-left';\n      }, 50);\n\tbreak;\n\tdefault:\n\treturn\n  }\n  this.setState({\n    floating: true\n  });\n}\n\ncomponentDidMount() {\n\t// this.setState({\n\t// \tfloating: true\n\t// })\n\n\tthis.floatingMonsterRef.current.addEventListener('animationend', () => {animationEnd});\n}\n\ncomponentDidUpdate() {\n\tconsole.log('update');\n\n\tlet floatingMonster = this.floatingMonsterRef.current;\n\n    floatingMonster.addEventListener('animationend', () => {animationEnd});\n\n\t//this.floatingMonsterRef.current.addEventListener('animationend', function() { animationEnd(that)}); //this.animationEnd(this.floatingMonsterRef.current)\n\t\n(function loop() {\n\t    var rand = Math.round(Math.random() * (3000 - 500)) + 5000;\n\t    let floatingMonsterTimer = setTimeout((() => {\n\t    \tconsole.log('timout up');\n\t\t    this.boo(this.floatingMonsterRef.current)//Need to send this floating monster\n\t\t}), rand);\n\t}.bind(this)());\n}\n\nrender() {\n\t\treturn (\n\t\t\t<div id={this.props.id} className={`floating-monster ${this.props.species}`} ref={this.floatingMonsterRef} style={{backgroundColor: this.state.color}}>\n\t\t\t\t<div className='head' />\n\t\t\t\t<div className='torso' />\n\t\t\t\t<div className='left-arm' />\n\t\t\t\t<div className='right-arm' />\n\t\t\t</div>\n\t\t\t\t)\n}\n\n}\n\n\nconst transitionEnded = e => {\n  if (e.propertyName !== property) {\n\treturn; //Wrong transition\n  }\n  else { \n\telement.removeEventListener('transitionend', transitionEnded);\n\t  resolve(animate);\n  }\n}\nelement.addEventListener('transitionend', transitionEnded);\n\n\n\n\n\n//const animationEnd = () => {\n\n//floatingMonster.removeEventListener('animationend', () => {animationEnd});\n\n// const animationEnd = () => {\n// \tfloatingMonster = Document.getElementById('');      \n//     floatingMonster.removeEventListener('animationend', () => {animationEnd});\n//  })\n\n\t// console.log('here');\n\n\t// floatingMonster.removeEventListener('animationend', () => {animationEnd(floatingMonster)});\n\n\t// const that = floatingMonster;\n\t// floatingMonster.className = 'floating-monster';\n\t// floatingMonster.style.removeProperty('top','right','bottom','left');\n\t// floatingMonster.removeEventListener('animationend', function() { animationEnd(that)});\n//}"]},"metadata":{},"sourceType":"module"}