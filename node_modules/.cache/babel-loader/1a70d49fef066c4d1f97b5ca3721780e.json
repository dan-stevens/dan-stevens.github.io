{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/vehicle.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nimport { Frame } from './frame';\nexport class Vehicle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.cycleFrameType = frameTypeCount => {\n      let nextFrame = this.state.currentFrameType; //if (this.state.currentFrameType <= frameTypeCount) {\n\n      nextFrame++; //}\n      // else {\n      // \tnextFrame = 0;\n      // }\n\n      this.setState({\n        currentFrameType: nextFrame\n      });\n    };\n\n    this.state = {\n      displayFrame: false,\n      frameTypes: [{\n        frameTypeName: 'ice-cream-truck'\n      }, {\n        frameTypeName: 'fire-truck'\n      }, {\n        frameTypeName: 'school-bus'\n      }, {\n        frameTypeName: 'tractor'\n      }, {\n        frameTypeName: 'police-car'\n      }, {\n        frameTypeName: 'garbage-truck'\n      }]\n    };\n  }\n\n  componentWillUpdate(prevProps, prevState) {\n    //Bring in frame\n    if (this.props.displayFrame && this.state.displayFrame === false) {\n      this.setState({\n        displayFrame: true\n      });\n    } //Remove frame\n\n\n    if (!this.props.displayFrame && this.state.displayFrame === true) {\n      this.setState({\n        displayFrame: false\n      });\n    } //Cycle frame option\n\n\n    if (this.props.currentFrameOption !== this.state.currentFrameOption) {\n      this.setState({\n        currentFrameOption: this.props.currentFrameOption\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.newVehicle();\n    this.setState({\n      displayFrame: false\n    });\n  }\n\n  render() {\n    let frame;\n\n    if (this.state.displayFrame) {\n      frame = React.createElement(Frame, {\n        currentFrameType: this.state.currentFrameType,\n        cycleFrameType: this.cycleFrameType,\n        currentFrameOption: this.props.currentFrameOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"vehicle\",\n      id: 'vehicleId' + this.props.currentVehicleId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Gizmo, {\n      onCreateMonster: this.createMonster,\n      currentFrameType: this.props.currentFrameType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), frame);\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/vehicle.js"],"names":["React","Gizmo","Frame","Vehicle","Component","constructor","props","cycleFrameType","frameTypeCount","nextFrame","state","currentFrameType","setState","displayFrame","frameTypes","frameTypeName","componentWillUpdate","prevProps","prevState","currentFrameOption","componentWillUnmount","newVehicle","render","frame","currentVehicleId","createMonster"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,KAAR,QAAoB,SAApB;AAEA,OAAO,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA0DnBC,cA1DmB,GA0DDC,cAAD,IAAoB;AACpC,UAAIC,SAAS,GAAE,KAAKC,KAAL,CAAWC,gBAA1B,CADoC,CAEpC;;AACCF,MAAAA,SAAS,GAH0B,CAIpC;AACA;AACA;AACA;;AACA,WAAKG,QAAL,CAAc;AACbD,QAAAA,gBAAgB,EAAEF;AADL,OAAd;AAGA,KArEkB;;AAGjB,SAAKC,KAAL,GAAa;AACXG,MAAAA,YAAY,EAAE,KADH;AAETC,MAAAA,UAAU,EAAE,CACd;AACDC,QAAAA,aAAa,EAAE;AADd,OADc,EAId;AACDA,QAAAA,aAAa,EAAE;AADd,OAJc,EAOd;AACDA,QAAAA,aAAa,EAAE;AADd,OAPc,EAUd;AACDA,QAAAA,aAAa,EAAE;AADd,OAVc,EAad;AACDA,QAAAA,aAAa,EAAE;AADd,OAbc,EAgBd;AACDA,QAAAA,aAAa,EAAE;AADd,OAhBc;AAFH,KAAb;AAuBD;;AAEDC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACzC;AACA,QAAI,KAAKZ,KAAL,CAAWO,YAAX,IAA2B,KAAKH,KAAL,CAAWG,YAAX,KAA4B,KAA3D,EAAkE;AACjE,WAAKD,QAAL,CAAc;AACbC,QAAAA,YAAY,EAAE;AADD,OAAd;AAGA,KANwC,CAQzC;;;AACA,QAAI,CAAC,KAAKP,KAAL,CAAWO,YAAZ,IAA4B,KAAKH,KAAL,CAAWG,YAAX,KAA4B,IAA5D,EAAkE;AACjE,WAAKD,QAAL,CAAc;AACbC,QAAAA,YAAY,EAAE;AADD,OAAd;AAGA,KAbwC,CAezC;;;AACA,QAAI,KAAKP,KAAL,CAAWa,kBAAX,KAAkC,KAAKT,KAAL,CAAWS,kBAAjD,EAAqE;AACpE,WAAKP,QAAL,CAAc;AACbO,QAAAA,kBAAkB,EAAE,KAAKb,KAAL,CAAWa;AADlB,OAAd;AAGA;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACtB,SAAKd,KAAL,CAAWe,UAAX;AACA,SAAKT,QAAL,CAAc;AACbC,MAAAA,YAAY,EAAE;AADD,KAAd;AAGE;;AAeHS,EAAAA,MAAM,GAAG;AAER,QAAIC,KAAJ;;AAGA,QAAI,KAAKb,KAAL,CAAWG,YAAf,EAA6B;AAC5BU,MAAAA,KAAK,GAAG,oBAAC,KAAD;AACP,QAAA,gBAAgB,EAAE,KAAKb,KAAL,CAAWC,gBADtB;AAEP,QAAA,cAAc,EAAE,KAAKJ,cAFd;AAGP,QAAA,kBAAkB,EAAE,KAAKD,KAAL,CAAWa,kBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAKA;;AAED,WACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,EAAE,EAAE,cAAc,KAAKb,KAAL,CAAWkB,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKC,aAA7B;AAA4C,MAAA,gBAAgB,EAAE,KAAKnB,KAAL,CAAWK,gBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEEY,KAFF,CADD;AAMA;;AA3F2C","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\nimport {Frame} from './frame';\n\nexport class Vehicle extends React.Component {\n\tconstructor(props) {\n\t  super(props);\n\n\t  this.state = {\n\t    displayFrame: false,\n       frameTypes: [\n\t    {\n\t\t  frameTypeName: 'ice-cream-truck'\n\t    },\n\t    {\n\t\t  frameTypeName: 'fire-truck'\n\t    },\n\t    {\n\t\t  frameTypeName: 'school-bus'\n\t    },\n\t    {\n\t\t  frameTypeName: 'tractor'\n\t    },\n\t    {\n\t\t  frameTypeName: 'police-car'\n\t    },\n\t    {\n\t\t  frameTypeName: 'garbage-truck'\n\t    }\n\t\t] \n\t  }\t  \n\t}\n\n\tcomponentWillUpdate(prevProps, prevState) {\t\n\t\t//Bring in frame\n\t\tif (this.props.displayFrame && this.state.displayFrame === false) {\t\t\t\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tdisplayFrame: true\n\t\t\t})\n\t\t}\n\t\t\n\t\t//Remove frame\n\t\tif (!this.props.displayFrame && this.state.displayFrame === true) {\t\t\t\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tdisplayFrame: false\n\t\t\t})\n\t\t}\n\n\t\t//Cycle frame option\n\t\tif (this.props.currentFrameOption !== this.state.currentFrameOption) {\n\t\t\tthis.setState({\n\t\t\t\tcurrentFrameOption: this.props.currentFrameOption\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\t\t\t\n\t\tthis.props.newVehicle();\n\t\tthis.setState({\n\t\t\tdisplayFrame: false\n\t\t});\n  \t}\n\n\tcycleFrameType = (frameTypeCount) => {\n\t\tlet nextFrame= this.state.currentFrameType;\n\t\t//if (this.state.currentFrameType <= frameTypeCount) {\n\t\t\tnextFrame++;\n\t\t//}\n\t\t// else {\n\t\t// \tnextFrame = 0;\n\t\t// }\n\t\tthis.setState({\n\t\t\tcurrentFrameType: nextFrame\t\t\n\t\t});\n\t}\t\n\t\n\trender() {\n\n\t\tlet frame;\n\n\n\t\tif (this.state.displayFrame) {\n\t\t\tframe = <Frame \n\t\t\t\tcurrentFrameType={this.state.currentFrameType} \n\t\t\t\tcycleFrameType={this.cycleFrameType} \n\t\t\t\tcurrentFrameOption={this.props.currentFrameOption}\n\t\t\t/>\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='vehicle' id={'vehicleId' + this.props.currentVehicleId}>\n\t\t\t\t<Gizmo onCreateMonster={this.createMonster} currentFrameType={this.props.currentFrameType} />\t\t\t\t\n\t\t\t\t{frame}\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}