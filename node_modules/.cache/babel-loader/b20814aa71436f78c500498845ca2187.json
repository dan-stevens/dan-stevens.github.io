{"ast":null,"code":"import _objectSpread from \"/Dan/DansCode/dan-stevens.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Header/Stripes/stripe.js\";\nimport React from 'react';\nconst styles = {\n  transition: 'all 1s ease-out'\n};\nexport class Stripe extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      opacity: 0,\n      scale: 1\n    };\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount: immediately before Stripe is rendered');\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount: immediately after Stripe is rendered');\n  }\n\n  componentWillRecieveProps() {\n    console.log('componentWillRecieveProps: component will recive some new prop(s)');\n  }\n\n  ShouldComponentUpdate() {\n    console.log('ShouldComponentUpdate: Before re-rendering (can be cancelled by returning false)');\n  }\n\n  componentWillUpdate() {\n    console.log('componentWillUpdate: Before re-rendering');\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate: after components updated in the DOM');\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount: Component will unmount - bye');\n  }\n\n  onHide() {\n    this.setState({\n      opacity: 1\n    });\n  }\n\n  onScale() {\n    this.setState({\n      scale: this.state.scale > 1 ? 1 : 1.5\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"header-stripe \".concat(this.props.className),\n      style: _objectSpread({}, styles, {\n        opacity: this.state.opacity,\n        transform: 'scale(' + this.state.scale + ')'\n      }),\n      onClick: this.onScale.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Header/Stripes/stripe.js"],"names":["React","styles","transition","Stripe","Component","constructor","state","opacity","scale","componentWillMount","console","log","componentDidMount","componentWillRecieveProps","ShouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","onHide","setState","onScale","render","props","className","transform","bind"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,MAAM,GAAG;AACdC,EAAAA,UAAU,EAAG;AADC,CAAf;AAIA,OAAO,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAE5CC,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,CADG;AAEZC,MAAAA,KAAK,EAAE;AAFK,KAAb;AAIA;;AAEDC,EAAAA,kBAAkB,GAAG;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;AACA;;AAGDC,EAAAA,iBAAiB,GAAG;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ;AACA;;AAGDE,EAAAA,yBAAyB,GAAG;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAY,mEAAZ;AACA;;AAGDG,EAAAA,qBAAqB,GAAG;AACvBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,kFAAZ;AACA;;AAGDI,EAAAA,mBAAmB,GAAG;AACrBL,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACA;;AAGDK,EAAAA,kBAAkB,GAAG;AACpBN,IAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ;AACA;;AAGDM,EAAAA,oBAAoB,GAAG;AACtBP,IAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACA;;AAEDO,EAAAA,MAAM,GAAG;AACR,SAAKC,QAAL,CAAc;AACbZ,MAAAA,OAAO,EAAE;AADI,KAAd;AAGA;;AAEDa,EAAAA,OAAO,GAAG;AACT,SAAKD,QAAL,CAAc;AACbX,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB,CAAnB,GAAuB,CAAvB,GAA2B;AADrB,KAAd;AAGA;;AAEDa,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,0BAAmB,KAAKC,KAAL,CAAWC,SAA9B,CAAd;AAAyD,MAAA,KAAK,oBAAMtB,MAAN;AAAcM,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAlC;AAA2CiB,QAAAA,SAAS,EAAE,WAAW,KAAKlB,KAAL,CAAWE,KAAtB,GAA8B;AAApF,QAA9D;AAAwJ,MAAA,OAAO,EAAE,KAAKY,OAAL,CAAaK,IAAb,CAAkB,IAAlB,CAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAIC;;AA7D0C","sourcesContent":["import React from 'react';\n\n\nconst styles = {\n\ttransition : 'all 1s ease-out'\n}\n\nexport class Stripe extends React.Component {\n\nconstructor() {\n\tsuper();\n\tthis.state = {\n\t\topacity: 0,\n\t\tscale: 1\n\t}\n}\n\ncomponentWillMount() {\n\tconsole.log('componentWillMount: immediately before Stripe is rendered');\n}\n\n\ncomponentDidMount() {\n\tconsole.log('componentDidMount: immediately after Stripe is rendered');\n}\n\n\ncomponentWillRecieveProps() {\n\tconsole.log('componentWillRecieveProps: component will recive some new prop(s)');\n}\n\n\nShouldComponentUpdate() {\n\tconsole.log('ShouldComponentUpdate: Before re-rendering (can be cancelled by returning false)');\n}\n\n\ncomponentWillUpdate() {\n\tconsole.log('componentWillUpdate: Before re-rendering');\n}\n\n\ncomponentDidUpdate() {\n\tconsole.log('componentDidUpdate: after components updated in the DOM');\n}\n\n\ncomponentWillUnmount() {\n\tconsole.log('componentWillUnmount: Component will unmount - bye');\n}\n\nonHide() {\n\tthis.setState({\n\t\topacity: 1\n\t});\n}\t\n\nonScale() {\n\tthis.setState({\n\t\tscale: this.state.scale > 1 ? 1 : 1.5\n\t});\n}\n\nrender() {\n\treturn (\n\t\t<div className={`header-stripe ${this.props.className}`} style={{...styles, opacity: this.state.opacity, transform: 'scale(' + this.state.scale + ')'}} onClick={this.onScale.bind(this)}> \n\t    </div>\n\t );\n\t}\n}"]},"metadata":{},"sourceType":"module"}