{"ast":null,"code":"import _objectSpread from \"/Dan/DansCode/dan-stevens.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Header/Stripes/stripe.js\";\nimport React from 'react';\nimport { Button } from '../../Button/button';\nconst styles = {\n  transition: 'all 1s ease-out'\n};\nexport class Stripe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      opacity: 0,\n      scale: 1\n    };\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount: immediately before Stripe is rendered');\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount: immediately after Stripe is rendered');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('componentWillRecieveProps: component will recive some new prop(s)');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('ShouldComponentUpdate: Before re-rendering (can be cancelled by returning false)');\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log('componentWillUpdate: Before re-rendering');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate: after components updated in the DOM');\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount: Component will unmount - bye');\n  }\n\n  onHide() {\n    this.setState({\n      opacity: 1\n    });\n  }\n\n  onScale() {\n    this.setState({\n      scale: this.state.scale > 1 ? 1 : 1.5\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-stripe \".concat(this.props.className),\n      style: _objectSpread({}, styles, {\n        opacity: this.state.opacity,\n        transform: 'scale(' + this.state.scale + ')'\n      }),\n      onClick: this.onScale.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Header/Stripes/stripe.js"],"names":["React","Button","styles","transition","Stripe","Component","constructor","props","state","opacity","scale","componentWillMount","console","log","componentDidMount","componentWillReceiveProps","nextProps","shouldComponentUpdate","nextState","componentWillUpdate","componentDidUpdate","prevProps","prevState","componentWillUnmount","onHide","setState","onScale","render","className","transform","bind"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,UAAU,EAAG;AADC,CAAf;AAIA,OAAO,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAE5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,CADG;AAEZC,MAAAA,KAAK,EAAE;AAFK,KAAb;AAIA;;AAEDC,EAAAA,kBAAkB,GAAG;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;AACA;;AAGDC,EAAAA,iBAAiB,GAAG;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ;AACA;;AAGDE,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACpCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mEAAZ;AACA;;AAGDI,EAAAA,qBAAqB,CAACD,SAAD,EAAYE,SAAZ,EAAuB;AAC3CN,IAAAA,OAAO,CAACC,GAAR,CAAY,kFAAZ;AACA;;AAGDM,EAAAA,mBAAmB,CAACH,SAAD,EAAYE,SAAZ,EAAuB;AACzCN,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACA;;AAGDO,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxCV,IAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ;AACA;;AAGDU,EAAAA,oBAAoB,GAAG;AACtBX,IAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACA;;AAEDW,EAAAA,MAAM,GAAG;AACR,SAAKC,QAAL,CAAc;AACbhB,MAAAA,OAAO,EAAE;AADI,KAAd;AAGA;;AAEDiB,EAAAA,OAAO,GAAG;AACT,SAAKD,QAAL,CAAc;AACbf,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB,CAAnB,GAAuB,CAAvB,GAA2B;AADrB,KAAd;AAGA;;AAEDiB,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,0BAAmB,KAAKpB,KAAL,CAAWqB,SAA9B,CAAd;AAAyD,MAAA,KAAK,oBAAM1B,MAAN;AAAcO,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAlC;AAA2CoB,QAAAA,SAAS,EAAE,WAAW,KAAKrB,KAAL,CAAWE,KAAtB,GAA8B;AAApF,QAA9D;AAAwJ,MAAA,OAAO,EAAE,KAAKgB,OAAL,CAAaI,IAAb,CAAkB,IAAlB,CAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADD;AAOC;;AAhE0C","sourcesContent":["import React from 'react';\nimport { Button } from '../../Button/button'\n\nconst styles = {\n\ttransition : 'all 1s ease-out'\n}\n\nexport class Stripe extends React.Component {\n\nconstructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t\topacity: 0,\n\t\tscale: 1\n\t}\n}\n\ncomponentWillMount() {\n\tconsole.log('componentWillMount: immediately before Stripe is rendered');\n}\n\n\ncomponentDidMount() {\n\tconsole.log('componentDidMount: immediately after Stripe is rendered');\n}\n\n\ncomponentWillReceiveProps(nextProps) {\n\tconsole.log('componentWillRecieveProps: component will recive some new prop(s)');\n}\n\n\nshouldComponentUpdate(nextProps, nextState) {\n\tconsole.log('ShouldComponentUpdate: Before re-rendering (can be cancelled by returning false)');\n}\n\n\ncomponentWillUpdate(nextProps, nextState) {\n\tconsole.log('componentWillUpdate: Before re-rendering');\n}\n\n\ncomponentDidUpdate(prevProps, prevState) {\n\tconsole.log('componentDidUpdate: after components updated in the DOM');\n}\n\n\ncomponentWillUnmount() {\n\tconsole.log('componentWillUnmount: Component will unmount - bye');\n}\n\nonHide() {\n\tthis.setState({\n\t\topacity: 1\n\t});\n}\t\n\nonScale() {\n\tthis.setState({\n\t\tscale: this.state.scale > 1 ? 1 : 1.5\n\t});\n}\n\nrender() {\n\treturn (\n\t\t<div>\n\t\t<div className={`header-stripe ${this.props.className}`} style={{...styles, opacity: this.state.opacity, transform: 'scale(' + this.state.scale + ')'}} onClick={this.onScale.bind(this)}> \n\t    </div>\n\t    <Button />\n\t    </div>\n\t );\n\t}\n}"]},"metadata":{},"sourceType":"module"}