{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nimport { Crane } from './crane';\nimport { Monster } from './monster';\nimport { FloatingMonster } from './floatingMonster';\nimport './gizmo.css';\nimport './monster.css';\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gizmoCount: 0,\n      gizmoArray: [],\n      animationQueue: [],\n      animationQueuePriority: 0,\n      currentAnimation: [],\n      monsterCount: 0,\n      monsterArray: [],\n      floatingMonsterCount: 0,\n      floatingMonsterArray: []\n    };\n\n    this.createGizmo = () => {\n      this.setState({\n        gizmoCount: this.state.gizmoCount + 1,\n        gizmoArray: [...this.state.gizmoArray, React.createElement(Gizmo, {\n          key: this.state.gizmoCount,\n          number: this.state.gizmoCount,\n          onFilterOut: this.convertMonster,\n          onCreateMonster: this.createMonster,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })]\n      });\n    };\n\n    this.convertMonster = this.convertMonster.bind(this);\n    this.removeComponent = this.removeComponent.bind(this);\n    this.createMonster = this.createMonster.bind(this);\n    this.createFloatingMonster = this.createFloatingMonster.bind(this);\n  }\n\n  convertMonster(monsterNumber, monsterOffsetTop) {\n    this.setState({\n      animationQueue: [{\n        animationName: 'craneToPickup',\n        animationSequence: craneToPickup,\n        priority: 1\n      }, {\n        animationName: 'craneClawLower',\n        animationSequence: craneClawLower,\n        priority: 2,\n        monsterOffsetTop: monsterOffsetTop\n      }, {\n        animationName: 'craneClawGrab',\n        animationSequence: craneClawGrab,\n        priority: 3,\n        monsterOffsetTop: monsterOffsetTop\n      }, {\n        animationName: 'craneClawPickup',\n        animationSequence: craneClawPickup,\n        priority: 4\n      }, {\n        animationName: 'monsterPickup',\n        animationSequence: monsterPickup,\n        priority: 4,\n        monsterNumber: monsterNumber,\n        monsterOffsetTop: monsterOffsetTop\n      }, {\n        animationName: 'craneToDrop',\n        animationSequence: craneToDrop,\n        priority: 5,\n        monsterNumber: monsterNumber,\n        monsterOffsetTop: monsterOffsetTop\n      }, {\n        animationName: 'monsterToDrop',\n        animationSequence: monsterToDrop,\n        priority: 5,\n        monsterNumber: monsterNumber,\n        monsterOffsetTop: monsterOffsetTop\n      }, {\n        animationName: 'craneClawDrop',\n        animationSequence: craneClawDrop,\n        priority: 6\n      }, {\n        animationName: 'monsterSpin',\n        animationSequence: monsterSpin,\n        priority: 7,\n        monsterNumber: monsterNumber\n      }, {\n        animationName: 'monsterDrop',\n        animationSequence: monsterDrop,\n        priority: 7,\n        monsterNumber: monsterNumber,\n        monsterRemove: true\n      }, {\n        animationName: 'craneReset',\n        animationSequence: craneReset,\n        priority: 8\n      }]\n    });\n  }\n\n  removeComponent(componentArray, componentNumber) {\n    this.setState({\n      [componentArray]: this.state[componentArray].filter(function (item) {\n        return item.props.number !== componentNumber;\n      })\n    });\n  }\n\n  createMonster(monsterState, monsterProps) {\n    this.setState({\n      monsterCount: this.state.monsterCount + 1,\n      monsterArray: [...this.state.monsterArray, React.createElement(Monster, {\n        key: this.state.monsterCount,\n        id: monsterProps.number,\n        number: monsterProps.number,\n        species: monsterState.species,\n        onRemove: this.removeComponent,\n        oncreateFloatingMonster: this.createFloatingMonster,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })]\n    });\n  }\n\n  createFloatingMonster(monsterProps) {\n    this.setState({\n      floatingMonsterCount: this.state.floatingMonsterCount + 1,\n      floatingMonsterArray: [...this.state.floatingMonsterArray, React.createElement(FloatingMonster, {\n        key: this.state.floatingMonsterCount,\n        id: 'floating-monster-id-' + monsterProps.number,\n        number: monsterProps.number,\n        species: monsterProps.species,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })]\n    });\n  } //current animation's done\n\n\n  currentAnimationFinished(animate) {\n    //Unmount this component\n    if (animate.monsterRemove) {\n      this.removeComponent(\"gizmoArray\", animate.monsterNumber);\n    }\n\n    this.setState({\n      animationQueue: this.state.animationQueue.filter(function (item) {\n        return item !== animate;\n      }),\n      currentAnimation: this.state.currentAnimation.filter(function (item) {\n        return item !== animate;\n      })\n    }); //Reset animation queue priority\n\n    if (this.state.animationQueue.length === 0) {\n      this.setState({\n        animationQueuePriority: 0\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //We have an updated animation queue\n    if (prevState.animationQueue !== this.state.animationQueue && this.state.animationQueue.length !== 0 && this.state.currentAnimation.length === 0) {\n      let animationPriority = this.state.animationQueuePriority;\n      animationPriority++;\n      let sendToCurrentAnimation = [];\n      this.state.animationQueue.forEach(function (animation, index) {\n        if (animation.priority === animationPriority) {\n          sendToCurrentAnimation.push(animation);\n        }\n      }, this);\n      this.setState({\n        currentAnimation: sendToCurrentAnimation,\n        animationQueuePriority: animationPriority\n      });\n    } //We have current animation(s)\n\n\n    if (prevState.currentAnimation.length < this.state.currentAnimation.length && this.state.currentAnimation.length !== 0) {\n      this.state.currentAnimation.forEach(function (animate, index) {\n        animate.animationSequence(animate).then(resolve => this.currentAnimationFinished(resolve));\n      }, this);\n    } //We have floating monsters\n\n\n    if (prevState.floatingMonsterArray !== this.state.floatingMonsterArray) {\n      //Pick a side of the viewport\n      let viewport = ['top', 'right', 'bottom', 'left'];\n      let side = viewport[Math.floor(Math.random() * viewport.length)];\n      console.log(side); //Pick a location on that side\n\n      let sideLocation = Math.random() * 100 + '%';\n      console.log(sideLocation); //Pick a Monster\n\n      let selectedMonster = this.state.floatingMonsterArray[Math.floor(Math.random() * this.state.floatingMonsterArray.length)];\n      console.log(JSON.stringify(selectedMonster)); //Animate it\n\n      boo(side, sideLocation, selectedMonster.id);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gizmos-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Crane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"gizmo-button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(GizmoButton, {\n      onClick: this.createGizmo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"gizmo-creater\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, this.state.gizmoArray), React.createElement(\"section\", {\n      className: \"gizmo-converter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"need to design a converter\")), React.createElement(\"section\", {\n      className: \"gizmo-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"need to design a gizmo result\"), this.state.monsterArray), React.createElement(\"section\", {\n      className: \"floating-monster-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, this.state.floatingMonsterArray));\n  }\n\n}\n\nconst craneToPickup = animate => {\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate, element, 'margin-left', '38%');\n};\n\nconst craneClawLower = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'top', animate.monsterOffsetTop + 'px');\n};\n\nconst craneClawGrab = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'background-color', 'red');\n};\n\nconst craneClawPickup = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'top', 0);\n};\n\nconst monsterPickup = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'top', -animate.monsterOffsetTop + 'px');\n};\n\nconst craneToDrop = animate => {\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate, element, 'margin-left', '70.5%');\n};\n\nconst monsterToDrop = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'left', '50%');\n};\n\nconst craneClawDrop = animate => {\n  const element = document.getElementById('crane-claw');\n  return cssTransitionToPromise(animate, element, 'background-color', 'green');\n};\n\nconst monsterDrop = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'top', '100px');\n};\n\nconst monsterSpin = animate => {\n  const element = document.getElementById('gizmoId-' + animate.monsterNumber);\n  return cssTransitionToPromise(animate, element, 'transform', 'rotate(180deg)');\n};\n\nconst craneReset = animate => {\n  const element = document.getElementById('crane');\n  return cssTransitionToPromise(animate, element, 'margin-left', 'calc(-25% - 5px)');\n};\n\nconst cssTransitionToPromise = (animate, element, property, value) => {\n  return new Promise(resolve => {\n    element.style[property] = value;\n\n    const transitionEnded = e => {\n      if (e.propertyName !== property) {\n        return; //Wrong transition\n      } else {\n        element.removeEventListener('transitionend', transitionEnded);\n        resolve(animate);\n      }\n    };\n\n    element.addEventListener('transitionend', transitionEnded);\n  });\n};\n\nconst boo = (side, sideLocation, selectedMonsterId) => {\n  switch (side) {\n    case 'top':\n      document.getElementById(selectedMonsterId).className += ' floating-monster-top';\n      break;\n\n    case 'right':\n      selectedMonster.className += ' floating-monster-right';\n      break;\n\n    case 'bottom':\n      selectedMonster.className += ' floating-monster-bottom';\n      break;\n\n    case 'left':\n      selectedMonster.className += ' floating-monster-left';\n      break;\n\n    default:\n      return;\n  }\n};\n\nclass GizmoButton extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Make a Gizmo\");\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js"],"names":["React","Gizmo","Crane","Monster","FloatingMonster","GizmoSection","Component","constructor","props","state","gizmoCount","gizmoArray","animationQueue","animationQueuePriority","currentAnimation","monsterCount","monsterArray","floatingMonsterCount","floatingMonsterArray","createGizmo","setState","convertMonster","createMonster","bind","removeComponent","createFloatingMonster","monsterNumber","monsterOffsetTop","animationName","animationSequence","craneToPickup","priority","craneClawLower","craneClawGrab","craneClawPickup","monsterPickup","craneToDrop","monsterToDrop","craneClawDrop","monsterSpin","monsterDrop","monsterRemove","craneReset","componentArray","componentNumber","filter","item","number","monsterState","monsterProps","species","currentAnimationFinished","animate","length","componentDidUpdate","prevProps","prevState","animationPriority","sendToCurrentAnimation","forEach","animation","index","push","then","resolve","viewport","side","Math","floor","random","console","log","sideLocation","selectedMonster","JSON","stringify","boo","id","render","element","document","getElementById","cssTransitionToPromise","property","value","Promise","style","transitionEnded","e","propertyName","removeEventListener","addEventListener","selectedMonsterId","className","GizmoButton","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\nimport {Crane} from './crane';\nimport {Monster} from './monster';\nimport {FloatingMonster} from './floatingMonster';\nimport './gizmo.css';\nimport './monster.css';\n\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.convertMonster = this.convertMonster.bind(this);\n\tthis.removeComponent = this.removeComponent.bind(this);\n\tthis.createMonster = this.createMonster.bind(this);\n\tthis.createFloatingMonster = this.createFloatingMonster.bind(this);\n  }\n  state = {\n    gizmoCount: 0,\n    gizmoArray: [],\n    animationQueue: [],\n    animationQueuePriority: 0,\n    currentAnimation: [],\n    monsterCount: 0,\n    monsterArray: [],\n    floatingMonsterCount: 0,\n    floatingMonsterArray: []\n  }\n\n\tcreateGizmo = () => {\n\t\tthis.setState({\n\t\t\tgizmoCount : this.state.gizmoCount + 1,\n\t\t\tgizmoArray: [...this.state.gizmoArray, \n\t\t\t  <Gizmo \n\t\t\t    key={this.state.gizmoCount} \n\t\t\t    number={this.state.gizmoCount} \n\t\t\t    onFilterOut={this.convertMonster} \n\t\t\t    onCreateMonster={this.createMonster}\n\t\t\t  />\n\t\t\t]\n\t\t});\n\t}\n\n\tconvertMonster(monsterNumber, monsterOffsetTop) {\n\t\tthis.setState({\n\t\t\tanimationQueue: [\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneToPickup',\n\t\t\t  \tanimationSequence: craneToPickup,\n\t\t\t  \tpriority: 1\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneClawLower',\n\t\t\t  \tanimationSequence: craneClawLower,\n\t\t\t  \tpriority: 2,\n\t\t\t  \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneClawGrab',\n\t\t\t  \tanimationSequence: craneClawGrab,\n\t\t\t  \tpriority: 3,\n\t\t\t  \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneClawPickup',\n\t\t\t  \tanimationSequence: craneClawPickup,\n\t\t\t  \tpriority: 4\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'monsterPickup',\n\t\t\t  \tanimationSequence: monsterPickup,\n\t\t\t  \tpriority: 4,\n\t\t\t  \tmonsterNumber: monsterNumber,\n\t\t\t  \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneToDrop',\n\t\t\t  \tanimationSequence: craneToDrop,\n\t\t\t  \tpriority: 5,\n\t\t\t  \tmonsterNumber: monsterNumber,\n\t\t\t  \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'monsterToDrop',\n\t\t\t  \tanimationSequence: monsterToDrop,\n\t\t\t  \tpriority: 5,\n\t\t\t  \tmonsterNumber: monsterNumber,\n\t\t\t  \tmonsterOffsetTop: monsterOffsetTop\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneClawDrop',\n\t\t\t  \tanimationSequence: craneClawDrop,\n\t\t\t  \tpriority: 6\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'monsterSpin',\n\t\t\t  \tanimationSequence: monsterSpin,\n\t\t\t  \tpriority: 7,\n\t\t\t  \tmonsterNumber: monsterNumber\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'monsterDrop',\n\t\t\t  \tanimationSequence: monsterDrop,\n\t\t\t  \tpriority: 7,\n\t\t\t  \tmonsterNumber: monsterNumber,\n\t\t\t  \tmonsterRemove: true\n\t\t\t  },\n\t\t\t  {\n\t\t\t  \tanimationName: 'craneReset',\n\t\t\t  \tanimationSequence: craneReset,\n\t\t\t  \tpriority: 8\n\t\t\t  }\n\t\t\t]\n\t\t});\n\t}\n\n\tremoveComponent(componentArray, componentNumber) {\n\t\tthis.setState({\n\t\t\t[componentArray] : this.state[componentArray].filter(function(item) {\n\t\t\t\treturn item.props.number !== componentNumber\n\t\t\t})\n\t\t});\n\t}\n\n\tcreateMonster(monsterState, monsterProps) {\n\t\tthis.setState({\n\t\t\tmonsterCount: this.state.monsterCount + 1,\n\t\t\tmonsterArray: [...this.state.monsterArray, \n\t\t\t  <Monster \n\t\t\t    key={this.state.monsterCount} \n\t\t\t    id={monsterProps.number}\n\t\t\t    number={monsterProps.number}\n\t\t\t    species={monsterState.species} \n\t\t\t    onRemove={this.removeComponent}\n\t\t\t    oncreateFloatingMonster={this.createFloatingMonster}\n\t\t\t  />\n\t\t\t]\n\t\t});\n\t}\n\n\tcreateFloatingMonster(monsterProps) {\n\t\tthis.setState({\n\t\t\tfloatingMonsterCount: this.state.floatingMonsterCount + 1,\n\t\t\tfloatingMonsterArray: [...this.state.floatingMonsterArray, \n\t\t\t  <FloatingMonster \n\t\t\t    key={this.state.floatingMonsterCount} \n\t\t\t    id={'floating-monster-id-' + monsterProps.number}\n\t\t\t    number={monsterProps.number}\n\t\t\t    species={monsterProps.species} \n\t\t\t  />\n\t\t\t]\n\t\t});\n\t}\n\n\t//current animation's done\n\tcurrentAnimationFinished(animate) {\n\n\t\t//Unmount this component\n\t\tif (animate.monsterRemove) {\n\t\t\tthis.removeComponent(\"gizmoArray\", animate.monsterNumber);\n\t\t}\n\n\n\t\tthis.setState({\t\n\n\t\t\tanimationQueue: this.state.animationQueue.filter(function(item) {\n\t\t\t\treturn item !== animate\n\t\t\t}),\n\t\t\tcurrentAnimation: this.state.currentAnimation.filter(function(item) {\n\t\t\t\treturn item !== animate\n\t\t\t}),\n\t\t});\n\n\t\t//Reset animation queue priority\n\t\tif (this.state.animationQueue.length === 0) {\n\t\t\tthis.setState({\n\t\t\t\tanimationQueuePriority: 0\n\t\t\t})\t\t\t\n\t\t}\n\t}\n\n\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t//We have an updated animation queue\n\t\tif ((prevState.animationQueue !== this.state.animationQueue \n\t\t\t&& this.state.animationQueue.length !== 0\n\t\t\t&& this.state.currentAnimation.length === 0\n\t\t)) {\n\n\t\t\tlet animationPriority = this.state.animationQueuePriority;\n\n\t\t\tanimationPriority++;\n\n\t\t\tlet sendToCurrentAnimation = [];\n\t\t\tthis.state.animationQueue.forEach(function(animation, index) { \n\t\t\t\tif (animation.priority === animationPriority) {\t\t\t\t\n\t\t\t\t\tsendToCurrentAnimation.push(animation);\n\t\t\t\t}\t\t\t\t\n\t\t\t}, this);\n\n\t\t\tthis.setState({\n\t\t\t  currentAnimation: sendToCurrentAnimation,\t\n\t\t\t  animationQueuePriority: animationPriority  \n\t\t\t});\n\t\t}\t\t\n\n\t\t//We have current animation(s)\n\t\tif (prevState.currentAnimation.length < this.state.currentAnimation.length && this.state.currentAnimation.length !== 0) {\t\t\t\n\t\t\t\tthis.state.currentAnimation.forEach(function(animate, index) {\n\t\t\t\t\tanimate.animationSequence(animate).then((resolve) => this.currentAnimationFinished(resolve));\t\t\t\n\t\t\t\t}, this);\n\t\t}\t\n\n\t\t//We have floating monsters\n\t\tif (prevState.floatingMonsterArray !== this.state.floatingMonsterArray) {\n\t\t  //Pick a side of the viewport\n\t\t  let viewport = ['top', 'right', 'bottom', 'left'];\n\t\t  let side = viewport[Math.floor(Math.random() * viewport.length)];\n\t\t  console.log(side);\n\n\t\t  //Pick a location on that side\n\t\t  let sideLocation = Math.random() * 100 + '%';\n\t\t  console.log(sideLocation);\n\t\t  \n\t\t  //Pick a Monster\n\t\t  let selectedMonster = this.state.floatingMonsterArray[Math.floor(Math.random() * this.state.floatingMonsterArray.length)];\n\t\t  console.log(JSON.stringify(selectedMonster));\n\t\t  \n\t\t  //Animate it\n\t\t  boo(side, sideLocation, selectedMonster.id);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t  <div className='gizmos-container'>\n\t\t  \t<Crane />\n\t\t    <section className='gizmo-button-container'>\n\t\t      <GizmoButton onClick={this.createGizmo} />\n\t\t    </section>\n\t\t\t  <section className='gizmo-creater'>\n\t\t\t\t{this.state.gizmoArray}\n\t\t\t</section>\n            <section className='gizmo-converter'>\n             <p>need to design a converter</p>\n            </section>\n            <section className='gizmo-result'>\n             <p>need to design a gizmo result</p>\n             {this.state.monsterArray}\n            </section>\n            <section className='floating-monster-container'>\n            \t{this.state.floatingMonsterArray}\n            </section>\n\t      </div>\n\t\t)\n\t}\n}\n\n\nconst craneToPickup = (animate) => {\n  const element = document.getElementById('crane');\n  return (cssTransitionToPromise(animate, element, 'margin-left', '38%'))\n}\n\nconst craneClawLower = (animate) => {\n  const element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'top', animate.monsterOffsetTop + 'px'))\n}\n\nconst craneClawGrab = (animate) => {\n  const element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'background-color', 'red'))\n}\n\n\nconst craneClawPickup = (animate) => {\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'top', 0))\n}\n\nconst monsterPickup = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'top', - animate.monsterOffsetTop + 'px'))\n}\n\nconst craneToDrop = (animate) => {\n\tconst element = document.getElementById('crane');\n   return (cssTransitionToPromise(animate, element, 'margin-left', '70.5%'))\n}\n\nconst monsterToDrop = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'left', '50%'))\n}\n\nconst craneClawDrop = (animate) => {\n\tconst element = document.getElementById('crane-claw');\n   return (cssTransitionToPromise(animate, element, 'background-color', 'green'))\n}\n\nconst monsterDrop = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'top', '100px'))\n}\n\nconst monsterSpin = (animate) => {\n\tconst element = document.getElementById('gizmoId-' + animate.monsterNumber);\n   return (cssTransitionToPromise(animate, element, 'transform', 'rotate(180deg)'))\n}\n\nconst craneReset = (animate) => {\n  const element = document.getElementById('crane');\n  return (cssTransitionToPromise(animate, element, 'margin-left', 'calc(-25% - 5px)'))\n}\n\nconst cssTransitionToPromise = (animate, element, property, value) => {\nreturn (\n\t\t  new Promise(resolve => {\n\t      element.style[property] = value;\n\t      const transitionEnded = e => {\n\t      if (e.propertyName !== property) {\n\t    \treturn; //Wrong transition\n\t      }\n\t      else { \n\t    \telement.removeEventListener('transitionend', transitionEnded);\n\t  \t    resolve(animate);\n\t      }\n\t    }\n    element.addEventListener('transitionend', transitionEnded);\n    })\n  )\n}\n\nconst boo = (side, sideLocation, selectedMonsterId) => {\n  switch(side) {\n\tcase 'top': \n\t  document.getElementById(selectedMonsterId).className += ' floating-monster-top';\n\tbreak;\n\n\tcase 'right':\n\t  selectedMonster.className += ' floating-monster-right';  \n\tbreak;\n\n\tcase 'bottom':\n      selectedMonster.className += ' floating-monster-bottom';\n\tbreak;\n\n\tcase 'left':\n      selectedMonster.className += ' floating-monster-left';\n\tbreak;\n\tdefault:\n\treturn\n  }\n}\n\nclass GizmoButton extends React.Component {\n  render() {\n    \n    return (\n      <button onClick={this.props.onClick}>Make a Gizmo</button>\n    ) \n\n  }\n}"]},"metadata":{},"sourceType":"module"}