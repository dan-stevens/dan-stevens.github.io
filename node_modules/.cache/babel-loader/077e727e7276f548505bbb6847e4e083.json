{"ast":null,"code":"var _jsxFileName = \"/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js\";\nimport React from 'react';\nimport { Gizmo } from './gizmo';\nimport './gizmo.css';\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gizmoCount: 0,\n      gizmoArray: [],\n      monsterMoveRight: false\n    };\n\n    this.createGizmo = () => {\n      this.setState({\n        gizmoCount: this.state.gizmoCount + 1,\n        gizmoArray: [...this.state.gizmoArray, React.createElement(Gizmo, Object.assign({\n          key: this.state.gizmoCount,\n          number: this.state.gizmoCount,\n          onFilterOut: this.convertMonster\n        }, this.state, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }))]\n      });\n    };\n\n    this.convertMonster = this.convertMonster.bind(this);\n    this.pickUpMonster = this.pickUpMonster.bind(this);\n    this.removeMonster = this.removeMonster.bind(this);\n  }\n\n  craneIn(monsterNumber, callback) {\n    console.log('craneIn');\n    const element = document.getElementById('crane');\n    element.addEventListener('animationend', () => {\n      callback(monsterNumber);\n      element.classList.add('crane-move-left');\n      element.classList.remove('crane-move-right');\n      this.setState({\n        monsterMoveRight: true\n      });\n    });\n    element.classList.remove('crane-move-left');\n    element.classList.add('crane-move-right');\n  }\n\n  pickUpMonster(monsterNumber) {//console.log(this.state.gizmoArray[monsterNumber]);\n    //console.log(this.gizmoRef.current);\n  }\n\n  removeMonster(monsterNumber) {\n    console.log('removeMonster'); // run some animation here, wait till its done, and then fire set state like below.\n\n    this.setState({\n      gizmoArray: this.state.gizmoArray.filter(function (item) {\n        return item.props.number !== monsterNumber;\n      })\n    });\n  }\n\n  convertMonster(monsterNumber, monsterPickupTiming) {\n    console.log('monsterNumber: ' + monsterNumber);\n    console.log('monsterOffsetTop: ' + monsterOffsetTop);\n    this.craneIn(monsterNumber, this.pickUpMonster);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gizmos-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"crane-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"crane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"crane-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"crane-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"crane-claw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(\"section\", {\n      className: \"gizmo-button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(GizmoButton, {\n      onClick: this.createGizmo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"gizmo-creater\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.gizmoArray), React.createElement(\"section\", {\n      className: \"gizmo-converter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"need to design a converter\")), React.createElement(\"section\", {\n      className: \"gizmo-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"need to design a gizmo result\")));\n  }\n\n}\n\nclass GizmoButton extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Make a Gizmo\");\n  }\n\n}","map":{"version":3,"sources":["/Dan/DansCode/dan-stevens.github.io/src/components/Gizmos/gizmoSection.js"],"names":["React","Gizmo","GizmoSection","Component","constructor","props","state","gizmoCount","gizmoArray","monsterMoveRight","createGizmo","setState","convertMonster","bind","pickUpMonster","removeMonster","craneIn","monsterNumber","callback","console","log","element","document","getElementById","addEventListener","classList","add","remove","filter","item","number","monsterPickupTiming","monsterOffsetTop","render","GizmoButton","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Gizmo} from './gizmo';\nimport './gizmo.css';\n\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.convertMonster = this.convertMonster.bind(this);\n\tthis.pickUpMonster = this.pickUpMonster.bind(this);\n\tthis.removeMonster = this.removeMonster.bind(this);\n  }\n\t\tstate = {\n\t\t  gizmoCount : 0,\n\t\t  gizmoArray : [],\n\t\t  monsterMoveRight: false\n\t\t}\n\n\tcreateGizmo = () => {\n\t\tthis.setState({\n\t\t\tgizmoCount : this.state.gizmoCount + 1,\n\t\t\tgizmoArray: [...this.state.gizmoArray, <Gizmo key={this.state.gizmoCount} number={this.state.gizmoCount} onFilterOut={this.convertMonster} {...this.state} />]\t\t\t\n\t\t});\n\t}\n\n\t\n\n\tcraneIn(monsterNumber, callback) {\n\t\tconsole.log('craneIn');\n\t\t\n\t\tconst element = document.getElementById('crane');\n\n\t\telement.addEventListener('animationend', () => {\n\t      callback(monsterNumber);\n\t      element.classList.add('crane-move-left');\n\t      element.classList.remove('crane-move-right');\n\t      this.setState({\n\t      \tmonsterMoveRight: true\n\t      })\n\t    });\n\t\telement.classList.remove('crane-move-left');\n\t\telement.classList.add('crane-move-right');\n\t}\n\n\tpickUpMonster(monsterNumber) {\n\t\t//console.log(this.state.gizmoArray[monsterNumber]);\n\t\t//console.log(this.gizmoRef.current);\n\t}\n\n\tremoveMonster(monsterNumber) {\n\t\tconsole.log('removeMonster');\n\n\t\t// run some animation here, wait till its done, and then fire set state like below.\n\n\t\tthis.setState({\n\t\t\tgizmoArray : this.state.gizmoArray.filter(function(item) {\n\t\t\t\treturn item.props.number !== monsterNumber\n\t\t\t})\n\t\t});\n\t}\n\n\tconvertMonster(monsterNumber, monsterPickupTiming) {\n\t\tconsole.log('monsterNumber: ' + monsterNumber);\n\t\tconsole.log('monsterOffsetTop: ' + monsterOffsetTop);\n\t\tthis.craneIn(monsterNumber, this.pickUpMonster);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t  <div className='gizmos-container'>\n\t\t  \t<div className=\"crane-container\">\n\t\t  \t  <div id=\"crane\">\n\t\t  \t    <div className=\"crane-top\" />\n\t\t  \t    <div className=\"crane-line\" />\n\t\t  \t    <div className=\"crane-claw\" />\n\t\t  \t  </div>\n\t\t  \t</div>\n\t\t    <section className=\"gizmo-button-container\">\n\t\t      <GizmoButton onClick={this.createGizmo} />\n\t\t    </section>\n\t\t\t  <section className=\"gizmo-creater\">\n\t\t\t\t{this.state.gizmoArray}\n\t\t\t</section>\n            <section className=\"gizmo-converter\">\n             <p>need to design a converter</p>\n            </section>\n            <section className=\"gizmo-result\">\n             <p>need to design a gizmo result</p>\n            </section>\n\t      </div>\n\t\t)\n\t}\n}\n\nclass GizmoButton extends React.Component {\n  render() {\n    \n    return (\n      <button onClick={this.props.onClick}>Make a Gizmo</button>\n    ) \n\n  }\n}"]},"metadata":{},"sourceType":"module"}