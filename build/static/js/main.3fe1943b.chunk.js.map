{"version":3,"sources":["components/Button/button.js","components/Header/Box/box.js","components/Button/buttonTwo.js","components/Header/BoxTwo/boxTwo.js","components/Header/header.js","components/Gizmos/gizmoControls.js","components/Gizmos/gizmo.js","components/Gizmos/gizmoSection.js","components/ExternalApi/externalApi.js","components/BasementBuilder/basementBuilder.js","components/Contact/contact.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Button","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","inherits","createClass","key","value","console","log","onClick","react_default","a","createElement","React","Component","styles","transition","Box","state","opacity","scale","name","changeName","setState","newName","style","objectSpread","transform","onScale","button_Button","ButtonTwo","apply","arguments","BoxTwo","clicks","updateBoxTwo","nextProps","totalClicks","buttonTwo_ButtonTwo","Header","className","box_Box","boxTwo_BoxTwo","GizmoControls","type","min","max","val","step","onChangeWidth","onChangeCorners","onBuildMonster","Gizmo","myRef","createRef","backgroundColor","blockPaint","width","height","borderRadius","preMountEvents","toggleWidth","toggleCorners","componentLifeCycleEvent","possibleBlockColors","Math","floor","random","length","lifeCycleEvent","prevProps","prevState","node","document","lifeCycleEventText","createTextNode","appendChild","current","innerHTML","outerHTML","number","alert","id","ref","gizmoControls_GizmoControls","onChangeColor","toggleColor","onChangeHeight","toggleHeight","buildMonster","GizmoSection","gizmoCount","gizmoButtonFunction","createGizmo","gizmoRef","gizmoChildren","i","push","gizmo_Gizmo","gizmoSection_GizmoButton","gizmoSection_ParentGizmoContainer","ParentGizmoContainer","children","GizmoButton","ExternalApi","BasementBuilder","Contact","App","header_Header","gizmoSection_GizmoSection","externalApi_ExternalApi","basementBuilder_BasementBuilder","contact_Contact","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3fe1943b.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Button extends React.Component {\n\nconstructor(props) {\n\tsuper(props);\n\tthis.handleClick = this.handleClick.bind(this);\n}\n\n\thandleClick() {\n\t\tconsole.log('handleClick Called');\n\t\tconst newName = 'Daniel';\n\t\tthis.props.onClick(newName);\n\t}\n\n\trender() {\n\t\treturn <button onClick={this.handleClick} >Click Me</button>\n\t} \n}","import React from 'react';\nimport { Button } from '../../Button/button'\n\nconst styles = {\n\ttransition : 'all 1s ease-out'\n}\n\nexport class Box extends React.Component {\n\nconstructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t\topacity: 0,\n\t\tscale: 1,\n\t\tname: 'dan'\n\t}\n\n\tthis.changeName = this.changeName.bind(this);\n}\n\n// componentWillMount() {\n// \tconsole.log('componentWillMount: immediately before Stripe is rendered');\n// }\n\n\n// componentDidMount() {\n// \tconsole.log('componentDidMount: immediately after Stripe is rendered');\n// }\n\n\n// componentWillReceiveProps(nextProps) {\n// \tconsole.log('componentWillRecieveProps: component will recive some new prop(s)');\n// }\n\n\n// shouldComponentUpdate(nextProps, nextState) {\n// \tconsole.log('ShouldComponentUpdate: Before re-rendering (can be cancelled by returning false)');\n// \treturn true;\n// }\n\n\n// componentWillUpdate(nextProps, nextState) {\n// \tconsole.log(nextState.name + ' componentWillUpdate: Before re-rendering');\n// }\n\n\n// componentDidUpdate(prevProps, prevState) {\n// \tconsole.log(prevState.name + ' componentDidUpdate: after components updated in the DOM');\n// }\n\n\n// componentWillUnmount() {\n// \tconsole.log('componentWillUnmount: Component will unmount - bye');\n// }\n\nonHide() {\n\tthis.setState({\n\t\topacity: 1\n\t});\n}\t\n\nonScale() {\n\tthis.setState({\n\t\tscale: this.state.scale > 1 ? 1 : 1.5\n\t});\n}\n\nchangeName(newName) {\n    this.setState({\n      name: newName\n    });\n  }\n\n\nrender() {\n\treturn (\n\t\t<div>\n\t\t\t<div name={this.state.name} style={{...styles, opacity: this.state.opacity, transform: 'scale(' + this.state.scale + ')'}} onClick={this.onScale.bind(this)}> \n\t\t    </div>\n\t\t    <Button onClick={this.changeName} />\n\t    </div>\n\t );\n\t}\n}","//This is the child. It has no state but is passed a function from its parent that lets you update it's parent's state\nimport React from 'react';\n\nexport class ButtonTwo extends React.Component {\n\t\n\t//I know we'll need to render something...\n\trender() {\n\t\treturn(\n\t\t\t<button onClick={this.props.onClick}>Click Me Damnit</button>\n\t\t\t);\n\t}\n}","//This is the parent, it has a state\nimport React from 'react';\nimport { ButtonTwo } from '../../Button/buttonTwo';\n\nexport class BoxTwo extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tclicks : 0\n\t\t}\n\t\t//Set the inital state\n\t\t//Bind the function below to this current iteration of the module\n\t\tthis.updateBoxTwo = this.updateBoxTwo.bind(this);\n\t\t//console.log(this.state.clicks);\n\t}\n\n\t\tcomponentWillReceiveProps(nextProps) {\n\t\t//console.log('componentWillRecieveProps: component will recive some new prop(s)');\n\n\t}\n\n\n\t// shouldComponentUpdate(nextProps, nextState) {\n\t// \tconsole.log('totalClicks before ' + this.state.clicks);\n\t// \tconsole.log('ShouldComponentUpdate: Before re-rendering (can be cancelled by returning false)');\n\t// \treturn true;\n\t// }\n\n\n\t// componentWillUpdate(nextProps, nextState) {\n\t// \tconsole.log(nextState.clicks + ' componentWillUpdate: Before re-rendering');\n\t// }\n\n\n\t// componentDidUpdate(prevProps, prevState) {\n\t// \tconsole.log(prevState.clicks + ' componentDidUpdate: after components updated in the DOM');\n\t// \tconsole.log('after ' + this.state.clicks);\n\t// }\n\n\t//Here is the function that we will pass the the child to be called on some sort of event\n\t//It should update the state somehow...\n\tupdateBoxTwo() {\n\t\t\n\t\tconst totalClicks = this.state.clicks;\n\t\t\n\t\tthis.setState({\n\t\t\tclicks : totalClicks + 1\n\t\t});\n\t\t\n\t}\n\n\t//Time to render the child and pass the function above to it\n\trender() {\n\t\treturn (\n\t\t\t<ButtonTwo onClick={this.updateBoxTwo} />\n\t\t\t);\n\t}\n\n}","import React from 'react';\nimport { Box } from './Box/box';\nimport { BoxTwo } from './BoxTwo/boxTwo'; \n\nexport class Header extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"header\">\n\t\t        \t<Box />\n\t\t        </div>\n\t\t        <div className=\"better--header\">\n\t\t        \t<BoxTwo />\n\t\t        </div>\n\t        </div>\n         );\n\t}\n}","import React from 'react';\n\nexport class GizmoControls extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t\t<div className='gizmo-controls'>\n\t\t\t\t\t<input type=\"range\" min=\"100\" max=\"100000\" val=\"1000\" step=\"1000\" ></input>\n\t\t\t\t\t<button onClick={this.props.onChangeWidth}>Toggle width</button>\n\t\t\t\t\t<button onClick={this.props.onChangeCorners}>Toggle Corners</button>\n\t\t\t\t\t<button onClick={this.props.onBuildMonster}>Convert me!</button>\n\t\t\t\t</div>\n\t\t)\t\n\t}\n}","import React from 'react';\nimport {GizmoControls} from './gizmoControls';\n\nexport class Gizmo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      backgroundColor: this.blockPaint(),\n      width: '200px',\n      height: '100px',\n      borderRadius: '0px',\n      preMountEvents: ''\n    };\n    this.toggleWidth = this.toggleWidth.bind(this);\n    this.toggleCorners = this.toggleCorners.bind(this);\n    this.componentLifeCycleEvent = this.componentLifeCycleEvent.bind(this);\n  }\n\n  blockPaint() {\n  \tconst possibleBlockColors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'];\n  \tconst blockColor = Math.floor(Math.random() * possibleBlockColors.length);\n   \treturn possibleBlockColors[blockColor];\n  }\n\n  blockHeight() {\n    this.setState({\n\t  height: this.state.height === '100px' ? '200px' : '100px'\n    });\n  }\n\n  toggleWidth() {\n\tthis.setState({\n\t\twidth: this.state.width === '200px' ? '300px' : '200px'\n\t});\n  }\n\n  toggleCorners() {\n\tthis.setState({\n\t\tborderRadius: this.state.borderRadius === '0px' ? '50px' : '0px'\n\t});\n  }\n\n  buildMonster() {\n\n  }\n\n  componentLifeCycleEvent(lifeCycleEvent, prevProps, prevState) {\n    var node = document.createElement(\"li\");\n    var lifeCycleEventText = document.createTextNode(lifeCycleEvent);\n    if(prevProps) {\n  \t  console.log('prevProps: ' + prevProps);\n    }\n    if(prevState) {\n  \t  console.log('prevState: ' + prevState.backgroundColor);\n    }\n  \n    node.appendChild(lifeCycleEventText);\n    this.myRef.current.innerHTML += node.outerHTML;\n  }\n\n  componentWillMount() {\n\tthis.setState({\n\t\tpreMountEvents: 'componentWillMount called'\n \t});\n  }\n\n  componentDidMount() {\n    this.componentLifeCycleEvent('componentDidMount called');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\tconsole.log('the Gizmo component did update');\n\tif (prevState !== this.state) {\n\t\tthis.componentLifeCycleEvent('componentDidUpdate called', prevProps.number, prevState);\n\t}\n\tif (prevProps.number !== this.props.number) {\n\t\tconsole.log('theres a difference here');\n\t\tconsole.log('prevProps:');\n\t\tconsole.log(prevProps);\n\t\tconsole.log('this.props');\n\t\tconsole.log(this.props)\n\t}\n  }\n\n  componentWillUnmount() {\n    alert('siyanara sucker');\n  }\n\n  render() {\n\treturn (\n\t  <div className='gizmo' id={this.props.number} ref={this.props.number}>\n\t\t<div style={{\n\t\t\tbackgroundColor: this.state.backgroundColor,\n\t\t\twidth: this.state.width,\n\t\t\tborderRadius: this.state.borderRadius\n\t\t\t}}><span>My ref prop: {this.props.number}</span>\n\t\t</div>\n\t\t<ul ref={this.myRef} className='gizmo-details'>\n\t\t<li>{this.state.preMountEvents}</li>\n\t\t</ul>\n\n\t\t<GizmoControls \n\t\t\tonChangeColor={this.toggleColor}\n\t\t\tonChangeHeight={this.toggleHeight}\n\t\t\tonChangeWidth={this.toggleWidth}\n\t\t\tonChangeCorners={this.toggleCorners}\n      onBuildMonster={this.buildMonster}\n\t\t/>\n\t  </div>\n    )\n  }\n}","import React from 'react';\n\nimport {Gizmo} from './gizmo';\n\nimport './gizmo.css';\n\nexport class GizmoSection extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.gizmoRef = React.createRef();\n  }\n\t\tstate = {\n\t\t  gizmoCount : 0,\n\t\t  gizmoButtonFunction: ''\n\t\t}\n\n\tcreateGizmo = () => {\n\t\tthis.setState({\n\t\t\tgizmoCount: this.state.gizmoCount + 1,\n\t\t\tgizmoButtonFunction: 'createGizmo'\n\t\t});\n\t\tconsole.log(this.gizmoRef.current);\n\t}\n\n\tconvertGizmo() {\n\t\tthis.setState({\n\t  \t  gizmoButtonFunction: 'convertGizmo'\n\t  \t});\n\t  \t\n\t}\n\n\t// toggleGizmoButton() {\n\t//   if (this.state.gizmoButtonFunction === 'createGizmo') {\n\t//   \tthis.convertGizmo();\t  \t\n\t//   }\n\t//   else {\n\t//   \tthis.createGizmo();\n\t//   }\n\t// }\n\n\trender() {\n\t\tconst gizmoChildren = [];\n\t\tfor(let i = 0; i < this.state.gizmoCount; i++) {\n\t\t\tgizmoChildren.push(<Gizmo key={i} number={i} ref={this.gizmoRef} />)\n\t\t}\n\n\t\treturn (\n\t\t  <div className='gizmos-container'>\n\t\t    <section className=\"gizmo-button-container\">\n\t\t      <GizmoButton onClick={this.createGizmo} />\n\t\t    </section>\n\t\t\t<ParentGizmoContainer>\n\t\t\t\t{gizmoChildren}\n\t\t\t</ParentGizmoContainer>\n            <section className=\"gizmo-converter\">\n             <p>need to design a converter</p>\n            </section>\n            <section className=\"gizmo-result\">\n             <p>need to design a gizmo result</p>\n            </section>\n\t      </div>\n\t\t)\n\t}\n}\n\nconst ParentGizmoContainer = props => (\n  <div className=\"gizmo-creater\">\n\t<div className=\"GizmosGoHere\">\n\t  {props.children}\n    </div>\n  </div>\n);\n\nclass GizmoButton extends React.Component {\n  render() {\n    \n    return (\n      <button onClick={this.props.onClick}>Make a Gizmo</button>\n    ) \n\n  }\n\t// const gizmoFunction = this.state.gizmoButtonFunction === 'createGizmo' ? 'convertGizmo' : 'createGizmo';\n\t// state = {\n\t// \tgizmoButtonFunction : gizmoFunction\n\t// }\n}\n\n\n","import React from 'react';\n\nexport class ExternalApi extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>External API</div>\n\t\t);\n\t}\n}","import React from 'react';\n\nexport class BasementBuilder extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>Basement Builder</div>\n\t\t);\n\t}\n}","import React from 'react';\n\nexport class Contact extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>Footer</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport { Header }  from '../Header/header';\nimport { GizmoSection }  from '../Gizmos/gizmoSection';\nimport { ExternalApi } from '../ExternalApi/externalApi';\nimport { BasementBuilder } from '../BasementBuilder/basementBuilder';\nimport { Contact } from '../Contact/contact';\n\nimport './App.css';\n\nfunction App() {\nreturn (\n<div className='app'>\n  <div className='header-container'>\n    <Header className='header' />\n  </div>\n  <div className=\"gizmos-background\">\n      <GizmoSection />\n  </div>\n  <div className='external-api-container'>\n    <ExternalApi />\n  </div>\n  <div className='basement-builder-container'>\n    <BasementBuilder />\n  </div>\n  <div className='footer-container'>\n    <Contact className='footer' />\n  </div>\n</div>\n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}